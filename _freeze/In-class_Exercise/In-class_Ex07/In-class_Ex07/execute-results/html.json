{
  "hash": "dc68e53caa15307c1b1b01572e726e78",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class_Ex07\"\nauthor: \"Enrico Limberg\"\ndate: \"March 01, 2025\"\nexecute:\n    echo: true\n    eval: true\n    warning: false\n    freeze: true\n---\n\n\n\n# 1.0 Getting Started\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, tsibble, feasts, fable, seasonal)\n```\n:::\n\n\n\n## **1.1 Importing the data**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_data <- read_csv(\"data/visitor_arrivals_by_air.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nts_data$'Month-Year' <- dmy(\n  ts_data$'Month-Year')\n```\n:::\n\n\n\n## **1.2 Conventional base ts object versus tibble object**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 144 × 34\n   `Month-Year` `Republic of South Africa` Canada   USA Bangladesh Brunei China\n   <date>                            <dbl>  <dbl> <dbl>      <dbl>  <dbl> <dbl>\n 1 2008-01-01                         3680   6972 31155       6786   3729 79599\n 2 2008-02-01                         1662   6056 27738       6314   3070 82074\n 3 2008-03-01                         3394   6220 31349       7502   4805 72546\n 4 2008-04-01                         3337   4764 26376       7333   3096 76112\n 5 2008-05-01                         2089   4460 26788       7988   3586 64808\n 6 2008-06-01                         2515   3888 29725       8301   5284 55238\n 7 2008-07-01                         2919   5313 33183       9004   4070 80747\n 8 2008-08-01                         2471   4519 27427       7913   4183 66625\n 9 2008-09-01                         2492   3421 21588       7549   3160 52649\n10 2008-10-01                         3023   4756 25112       7527   2983 54423\n# ℹ 134 more rows\n# ℹ 27 more variables: `Hong Kong SAR (China)` <dbl>, India <dbl>,\n#   Indonesia <dbl>, Japan <dbl>, `South Korea` <dbl>, Kuwait <dbl>,\n#   Malaysia <dbl>, Myanmar <dbl>, Pakistan <dbl>, Philippines <dbl>,\n#   `Saudi Arabia` <dbl>, `Sri Lanka` <dbl>, Taiwan <dbl>, Thailand <dbl>,\n#   `United Arab Emirates` <dbl>, Vietnam <dbl>, `Belgium & Luxembourg` <dbl>,\n#   Finland <dbl>, France <dbl>, Germany <dbl>, Italy <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n## **1.3 Conventional base ts object versus tibble object**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_data_ts <- ts(ts_data)\nhead(ts_data_ts)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Month-Year Republic of South Africa Canada   USA Bangladesh Brunei China\n[1,]      13879                     3680   6972 31155       6786   3729 79599\n[2,]      13910                     1662   6056 27738       6314   3070 82074\n[3,]      13939                     3394   6220 31349       7502   4805 72546\n[4,]      13970                     3337   4764 26376       7333   3096 76112\n[5,]      14000                     2089   4460 26788       7988   3586 64808\n[6,]      14031                     2515   3888 29725       8301   5284 55238\n     Hong Kong SAR (China) India Indonesia Japan South Korea Kuwait Malaysia\n[1,]                 17103 41639     62683 37673       27937    284    31352\n[2,]                 21089 37170     47834 35297       22633    241    35030\n[3,]                 23230 44815     64688 42575       22876    206    37629\n[4,]                 17688 49527     58074 26839       20634    193    37521\n[5,]                 19340 67754     57089 30814       22785    140    38044\n[6,]                 19152 57380     70118 31001       22575    354    40419\n     Myanmar Pakistan Philippines Saudi Arabia Sri Lanka Taiwan Thailand\n[1,]    5269     1395       18622          406      5289  13757    18370\n[2,]    4643     1027       21609          591      4767  13921    16400\n[3,]    6218     1635       28464          626      4988  11181    23387\n[4,]    7324     1232       30131          644      7639  11665    24469\n[5,]    5395     1306       30193          470      5125  11436    21935\n[6,]    5542     1996       25800          772      4791  10689    19900\n     United Arab Emirates Vietnam Belgium & Luxembourg Finland France Germany\n[1,]                 2652   10315                 1341    1179   6918   11982\n[2,]                 2230   13415                 1449    1207   7876   13256\n[3,]                 3353   14320                 1674    1071   8066   15185\n[4,]                 3245   15413                 1426     768   8312   11604\n[5,]                 2856   14424                 1243     690   7066    9853\n[6,]                 4292   21368                 1255     624   5926    9347\n     Italy Netherlands Spain Switzerland United Kingdom Australia New Zealand\n[1,]  2953        4938  1668        4450          41934     71260        7806\n[2,]  2704        4885  1568        4381          44029     45595        4729\n[3,]  2822        5015  2254        5015          49489     53191        6106\n[4,]  3018        4902  1503        5434          35771     56514        7560\n[5,]  2165        4397  1365        4427          24464     57808        9090\n[6,]  2022        4166  1446        3359          22473     63350        9681\n```\n\n\n:::\n:::\n\n\n\n## **1.4 Converting tibble object to tsibble object**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_tsibble <- ts_data %>%\n  mutate(Month = yearmonth(`Month-Year`)) %>%\n  as_tsibble(index = `Month`)\n```\n:::\n\n\n\n## **1.5 tsibble object**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_tsibble\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tsibble: 144 x 35 [1M]\n   `Month-Year` `Republic of South Africa` Canada   USA Bangladesh Brunei China\n   <date>                            <dbl>  <dbl> <dbl>      <dbl>  <dbl> <dbl>\n 1 2008-01-01                         3680   6972 31155       6786   3729 79599\n 2 2008-02-01                         1662   6056 27738       6314   3070 82074\n 3 2008-03-01                         3394   6220 31349       7502   4805 72546\n 4 2008-04-01                         3337   4764 26376       7333   3096 76112\n 5 2008-05-01                         2089   4460 26788       7988   3586 64808\n 6 2008-06-01                         2515   3888 29725       8301   5284 55238\n 7 2008-07-01                         2919   5313 33183       9004   4070 80747\n 8 2008-08-01                         2471   4519 27427       7913   4183 66625\n 9 2008-09-01                         2492   3421 21588       7549   3160 52649\n10 2008-10-01                         3023   4756 25112       7527   2983 54423\n# ℹ 134 more rows\n# ℹ 28 more variables: `Hong Kong SAR (China)` <dbl>, India <dbl>,\n#   Indonesia <dbl>, Japan <dbl>, `South Korea` <dbl>, Kuwait <dbl>,\n#   Malaysia <dbl>, Myanmar <dbl>, Pakistan <dbl>, Philippines <dbl>,\n#   `Saudi Arabia` <dbl>, `Sri Lanka` <dbl>, Taiwan <dbl>, Thailand <dbl>,\n#   `United Arab Emirates` <dbl>, Vietnam <dbl>, `Belgium & Luxembourg` <dbl>,\n#   Finland <dbl>, France <dbl>, Germany <dbl>, Italy <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n# **2.0 Visualising Time-series Data**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_longer <- ts_data %>%\n  pivot_longer(cols = c(2:34),\n               names_to = \"Country\",\n               values_to = \"Arrivals\")\n```\n:::\n\n\n\n## **2.1 Visualising single time-series: ggplot2 methods**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_longer %>%\n  filter(Country == \"Malaysia\") %>%\n  ggplot(aes(x = `Month-Year`, \n             y = Arrivals))+\n  geom_line(size = 0.5)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n## **2.2 Plotting multiple time-series data with ggplot2 methods**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ts_longer, \n       aes(x = `Month-Year`, \n           y = Arrivals,\n           color = Country))+\n  geom_line(size = 0.5) +\n  theme(legend.position = \"bottom\", \n        legend.box.spacing = unit(0.5, \"cm\"))\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n\nTo provide effective comparison, [**facet_wrap()**]{.underline} of **ggplot2** package is used to create small multiple line graph\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ts_longer, \n       aes(x = `Month-Year`, \n           y = Arrivals))+\n  geom_line(size = 0.5) +\n  facet_wrap(~ Country,\n             ncol = 3,\n             scales = \"free_y\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n# **3.0 Visual Analysis of Time-series Data**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer <- ts_tsibble %>%\n  pivot_longer(cols = c(2:34),\n               names_to = \"Country\",\n               values_to = \"Arrivals\")\n```\n:::\n\n\n\n## **3.1 Visual Analysis of Seasonality with Seasonal Plot**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer %>%\n  filter(Country == \"Italy\" |\n         Country == \"Vietnam\" |\n         Country == \"United Kingdom\" |\n         Country == \"Germany\") %>% \n  gg_season(Arrivals)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n## **3.2 Visual Analysis of Seasonality with Cycle Plot**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer %>%\n  filter(Country == \"Vietnam\" |\n         Country == \"Italy\") %>% \n  autoplot(Arrivals) + \n  facet_grid(Country ~ ., scales = \"free_y\")\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer %>%\n  filter(Country == \"Vietnam\" |\n         Country == \"Italy\") %>% \n  gg_subseries(Arrivals)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-15-1.png){width=768}\n:::\n:::\n\n\n\n# **4.0 Time series decomposition**\n\n## **4.1 Single time series decomposition**\n\n[**ACF()**]{.underline} of **feasts** package is used to plot the ACF curve of visitor arrival from Vietnam.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer %>%\n  filter(`Country` == \"Vietnam\") %>%\n  ACF(Arrivals) %>% \n  autoplot()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n[**PACF()**]{.underline} of **feasts** package is used to plot the Partial ACF curve of visitor arrival from Vietnam.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer %>%\n  filter(`Country` == \"Vietnam\") %>%\n  PACF(Arrivals) %>% \n  autoplot()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n## **4.2 Multiple time-series decomposition**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer %>%\n  filter(`Country` == \"Vietnam\" |\n         `Country` == \"Italy\" |\n         `Country` == \"United Kingdom\" |\n         `Country` == \"China\") %>%\n  ACF(Arrivals) %>%\n  autoplot()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer %>%\n  filter(`Country` == \"Vietnam\" |\n         `Country` == \"Italy\" |\n         `Country` == \"United Kingdom\" |\n         `Country` == \"China\") %>%\n  PACF(Arrivals) %>%\n  autoplot()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n# **5.0 Visual STL Diagnostics**\n\n## 5.1 Visual STL diagnostics with feasts\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer %>%\n  filter(`Country` == \"Vietnam\") %>%\n  model(stl = STL(Arrivals)) %>%\n  components() %>%\n  autoplot()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n## **5.2 Classical Decomposition with feasts**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer %>%\n  filter(`Country` == \"Vietnam\") %>%\n  model(\n    classical_decomposition(\n      Arrivals, type = \"additive\")) %>%\n  components() %>%\n  autoplot()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n# 6.0 Visual Forecasting\n\n## 6.1 Time Series Data Sampling\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvietnam_ts <- tsibble_longer %>%\n  filter(Country == \"Vietnam\") %>% \n  mutate(Type = if_else(\n    `Month-Year` >= \"2019-01-01\", \n    \"Hold-out\", \"Training\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvietnam_train <- vietnam_ts %>%\n  filter(`Month-Year` < \"2019-01-01\")\n```\n:::\n\n\n\n## **6.2 Exploratory Data Analysis (EDA): Time Series Data**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvietnam_train %>%\n  model(stl = STL(Arrivals)) %>%\n  components() %>%\n  autoplot()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n\n## **6.3 Fitting forecasting models**\n\n### 6.3.1 Fitting Exponential Smoothing State Space (ETS) Models: fable methods\n\n### 6.3.2 Fitting a simple exponential smoothing (SES)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_ses <- vietnam_train %>%\n  model(ETS(Arrivals ~ error(\"A\") \n            + trend(\"N\") \n            + season(\"N\")))\nfit_ses\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A mable: 1 x 2\n# Key:     Country [1]\n  Country `ETS(Arrivals ~ error(\"A\") + trend(\"N\") + season(\"N\"))`\n  <chr>                                                   <model>\n1 Vietnam                                            <ETS(A,N,N)>\n```\n\n\n:::\n:::\n\n\n\n### 6.3.3 Examine Model Assumptions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngg_tsresiduals(fit_ses)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n\n### 6.3.4 The model details\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_ses %>%\n  report()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSeries: Arrivals \nModel: ETS(A,N,N) \n  Smoothing parameters:\n    alpha = 0.9998995 \n\n  Initial states:\n     l[0]\n 10312.99\n\n  sigma^2:  27939164\n\n     AIC     AICc      BIC \n2911.726 2911.913 2920.374 \n```\n\n\n:::\n:::\n\n\n\n### 6.3.5 Trend methods\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvietnam_H <- vietnam_train %>%\n  model(`Holt's method` = \n          ETS(Arrivals ~ error(\"A\") +\n                trend(\"A\") + \n                season(\"N\")))\nvietnam_H %>% report()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSeries: Arrivals \nModel: ETS(A,A,N) \n  Smoothing parameters:\n    alpha = 0.9998995 \n    beta  = 0.0001004625 \n\n  Initial states:\n     l[0]     b[0]\n 13673.29 525.8859\n\n  sigma^2:  28584805\n\n     AIC     AICc      BIC \n2916.695 2917.171 2931.109 \n```\n\n\n:::\n:::\n\n\n\n### 6.3.6 Damped Trend Methods\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvietnam_HAd <- vietnam_train %>%\n  model(`Holt's method` = \n          ETS(Arrivals ~ error(\"A\") +\n                trend(\"Ad\") + \n                season(\"N\")))\nvietnam_HAd %>% report()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSeries: Arrivals \nModel: ETS(A,Ad,N) \n  Smoothing parameters:\n    alpha = 0.9998999 \n    beta  = 0.0001098602 \n    phi   = 0.9784562 \n\n  Initial states:\n     l[0]   b[0]\n 13257.28 523.54\n\n  sigma^2:  28641536\n\n     AIC     AICc      BIC \n2917.921 2918.593 2935.218 \n```\n\n\n:::\n:::\n\n\n\n### 6.3.7 Checking for results\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngg_tsresiduals(vietnam_H)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngg_tsresiduals(vietnam_HAd)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n\n### 6.3.8 **Fitting ETS Methods with Season: Holt-Winters**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nVietnam_WH <- vietnam_train %>%\n  model(\n    Additive = ETS(Arrivals ~ error(\"A\") \n                   + trend(\"A\") \n                   + season(\"A\")),\n    Multiplicative = ETS(Arrivals ~ error(\"M\") \n                         + trend(\"A\") \n                         + season(\"M\"))\n    )\n\nVietnam_WH %>% report()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 10\n  Country .model          sigma2 log_lik   AIC  AICc   BIC    MSE   AMSE     MAE\n  <chr>   <chr>            <dbl>   <dbl> <dbl> <dbl> <dbl>  <dbl>  <dbl>   <dbl>\n1 Vietnam Additive       5.33e+6  -1336. 2706. 2711. 2755. 4.68e6 8.56e6 1.72e+3\n2 Vietnam Multiplicative 4.55e-3  -1300. 2635. 2640. 2684. 3.05e6 3.42e6 5.20e-2\n```\n\n\n:::\n:::\n\n\n\n### 6.3.9 **Fitting multiple ETS Models**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_ETS <- vietnam_train %>%\n  model(`SES` = ETS(Arrivals ~ error(\"A\") + \n                      trend(\"N\") + \n                      season(\"N\")),\n        `Holt`= ETS(Arrivals ~ error(\"A\") +\n                      trend(\"A\") +\n                      season(\"N\")),\n        `damped Holt` = \n          ETS(Arrivals ~ error(\"A\") +\n                trend(\"Ad\") + \n                season(\"N\")),\n        `WH_A` = ETS(\n          Arrivals ~ error(\"A\") + \n            trend(\"A\") + \n            season(\"A\")),\n        `WH_M` = ETS(Arrivals ~ error(\"M\") \n                         + trend(\"A\") \n                         + season(\"M\"))\n  )\n```\n:::\n\n\n\n### 6.3.10 Model efficient\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_ETS %>%\n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 45 × 4\n   Country .model      term      estimate\n   <chr>   <chr>       <chr>        <dbl>\n 1 Vietnam SES         alpha     1.00    \n 2 Vietnam SES         l[0]  10313.      \n 3 Vietnam Holt        alpha     1.00    \n 4 Vietnam Holt        beta      0.000100\n 5 Vietnam Holt        l[0]  13673.      \n 6 Vietnam Holt        b[0]    526.      \n 7 Vietnam damped Holt alpha     1.00    \n 8 Vietnam damped Holt beta      0.000110\n 9 Vietnam damped Holt phi       0.978   \n10 Vietnam damped Holt l[0]  13257.      \n# ℹ 35 more rows\n```\n\n\n:::\n:::\n\n\n\n### 6.3.11 Step 4: Model Comparison\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_ETS %>% \n  report()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 10\n  Country .model       sigma2 log_lik   AIC  AICc   BIC       MSE   AMSE     MAE\n  <chr>   <chr>         <dbl>   <dbl> <dbl> <dbl> <dbl>     <dbl>  <dbl>   <dbl>\n1 Vietnam SES         2.79e+7  -1453. 2912. 2912. 2920. 27515844. 5.99e7 3.91e+3\n2 Vietnam Holt        2.86e+7  -1453. 2917. 2917. 2931. 27718599. 6.03e7 3.92e+3\n3 Vietnam damped Holt 2.86e+7  -1453. 2918. 2919. 2935. 27556629. 5.97e7 3.92e+3\n4 Vietnam WH_A        5.33e+6  -1336. 2706. 2711. 2755.  4684271. 8.56e6 1.72e+3\n5 Vietnam WH_M        4.55e-3  -1300. 2635. 2640. 2684.  3046059. 3.42e6 5.20e-2\n```\n\n\n:::\n:::\n\n\n\n### 6.3.12 Step 5: Forecasting future values\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_ETS %>%\n  forecast(h = \"12 months\") %>%\n  autoplot(vietnam_ts, \n           level = NULL)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "In-class_Ex07_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}