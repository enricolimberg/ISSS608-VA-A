{
  "hash": "c9012f3bd886ddbbc815fe2a952c022c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home_Ex2\"\nauthor: \"Enrico Limberg\"\ndate: \"February 27, 2025\"\ndate-modified: \"last-modified\"\nexecute:\n    echo: true\n    eval: true\n    warning: false\n    freeze: true\n---\n\n\n\n# 1.0 Overview\n\n## 1.1 Background\n\nSince **Donald Trump** assumed office as the President of the United States on January 20, 2025, **global trade has become a key focus of attention.** Analyzing Singapore's international trade patterns from 2015 onwards is crucial for understanding the impact of economic and political shifts on trade relationships. This take-home exercise offers the **opportunity to apply data visualization techniques** to uncover insights into these evolving trends.\n\n## 1.2 Objective\n\n**The objective of this exercise is to:**\n\n1.  Extract and prepare Singapore's Merchandise Trade by Region/Market data from DOS.\n2.  Critique three existing visualizations from DOS, highlighting their strengths and weaknesses.\n3.  Create improved visualizations using ggplot2 and other R packages.\n4.  Perform time-series analysis or forecasting to analyze trends in Singapore's international trade.\n5.  Present findings in a structured Quarto HTML document, then publish it on Netlify.\n\n# 2.0 Data Overview\n\n## 2.1 Dataset Description\n\nThe dataset used in this analysis provides a comprehensive view of Singapore's Merchandise Trade by Region/Market since 2015. It includes detailed records of imports and exports across multiple global regions, categorized by time periods The dataset allows for an in-depth examination of Singapore's trade relationship, identifying trends, fluctuations, and potential impacts of global economic events on trade patterns.\n\nKey variables include:\n\n-   **Region/Country:** The geographical classification of trade partners.\n\n-   **Date:** The time period (monthly data points) for tracking trade changes.\n\n-   **Imports:** The total value of goods brought into Singapore from a specific region.\n\n-   **Exports:** The total value of goods sent from Singapore to a specific region.\n\nThis dataset provides an ideal foundation for both **time-series analysis and time-series forecasting,** helps to uncover long-term trade trends and predict future patterns.\n\n## 2.2 Target Audience\n\nThe insights derived from this dataset will be valuable to multiple stakeholders:\n\n-   **Economists & Policy Analysts:** To study the impact of global trade policies and economic shifts on Singapore's trade balance.\n\n-   **Business Analysts & Investors:** To identify key trade trends, market dependencies, and potential investment opportunities.\n\n-   **Academics & Researchers:** To explore trade relationships and perform data-driven studies on international commerce.\n\n-   **Government & Trade Authorities:** To make informed decisions regarding trade agreements and economic strategies.\n\n# 3.0 Getting Started\n\n## 3.1 Importing the tools\n\nThe R packages that are going to be used for this exercises are:\n\n**General Data Visualization:**\n\n-   **tidyverse**: A collection of packages for data manipulation and visualization.\n\n-   **ggplot2**: For creating high-quality, data-driven visualizations.\n\n-   **ggridges**: For creating ridgeline plots to visualize distributions.\n\n-   **ggdist**: For visualizing distributions and uncertainty in data.\n\n-   **ggpubr**: Enhances ggplot2 for publication-ready plots.\n\n-   **plotly**: Converts ggplot2 plots into interactive web visuals.\n\n-   **dplyr**: Efficient tools for data manipulation and transformation.\n\n#### **Time-Series Analysis & Forecasting**\n\n-   **readxl**: For importing Excel files into R.\n\n<!-- -->\n\n-   **lubridate**: Simplifies date and time parsing and manipulation.\n\n<!-- -->\n\n-   **tsibble**: A data structure for tidy time-series data.\n\n<!-- -->\n\n-   **feasts**: Tools for feature extraction and statistical analysis of time-series data.\n\n<!-- -->\n\n-   **fable**: Framework for time-series forecasting, supporting models like ARIMA and ETS.\n\n<!-- -->\n\n-   **fable.prophet**: Integrates Facebook's prophet for time-series forecasting.\n\n<!-- -->\n\n-   **timetk**: Extends time-series visualization, feature engineering, and analysis.\n\n<!-- -->\n\n-   **modeltime**: A modern framework for machine learning-based time-series forecasting.\n\n<!-- -->\n\n-   **seasonal**: For performing seasonal adjustments in time-series data.\n\n<!-- -->\n\n-   **tidymodels**: A framework for modeling and machine learning, providing a consistent interface for model building and evaluation.\n\nThese tools will enable us to perform **visual analytics**, redesign **existing trade visualizations**, and implement **time-series analysis** effectively.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse,ggplot2,ggridges,ggdist,ggpubr,readxl,plotly,dplyr,lubridate,tsibble,feasts,fable,fable.prophet,timetk,modeltime,seasonal,timetk,tidymodels)\n```\n:::\n\n\n\n## 3.2 Importing Data\n\nThe first dataset used for this take home exercise is provided in Excel format and is split into three different sheets:\n\n-   **T1 - Imports**\n\n-   **T2 - Domestic Exports**\n\n-   **T3 - Re-Exports**\n\nSince total exports consist of **domestic exports + re-exports**, we will import and process all three sheets.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nimports <- read_excel(\"data/traderegion.xlsx\", sheet = \"T1\", skip=10)\ndomestic_exports <- read_excel(\"data/traderegion.xlsx\", sheet = \"T2\", skip=10)\nre_exports <- read_excel(\"data/traderegion.xlsx\", sheet = \"T3\", skip=10)\n\nimports_clean <- imports[-c(161:200),]\ndomestic_exports_clean <- domestic_exports[-c(161:200),]\nre_exports_clean <- re_exports[-c(161:200),]\n```\n:::\n\n\n\n## 3.3 Creating a total exports column\n\n### 3.3.1 Ensuring that column names for domestic exports and re-exports match\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(domestic_exports_clean) <- colnames(re_exports_clean)\n```\n:::\n\n\n\n### 3.3.2 Convert numeric columns\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndomestic_exports_clean <- domestic_exports_clean %>%\n  mutate(across(-`Data Series`, as.numeric))\n\nre_exports_clean <- re_exports_clean %>%\n  mutate(across(-`Data Series`, as.numeric))\n```\n:::\n\n\n\n### 3.3.3 Merge datasets on both sheets using left join to preserve all rows\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntotal_exports <- left_join(domestic_exports_clean, re_exports_clean, by = \"Data Series\", suffix = c(\"_domestic\", \"_re\"))\n```\n:::\n\n\n\n### 3.3.4 Sum for domestic exports and re-exports\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntotal_exports <- total_exports %>%\n  mutate(across(matches(\"_domestic$\"), ~ . + get(sub(\"_domestic$\", \"_re\", cur_column())), .names = \"{.col}_total\")) %>%\n  select(`Data Series`, ends_with(\"_total\")) %>%\n  rename_with(~ gsub(\"_(domestic|re)_total\", \"_total\", .x))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntotal_exports\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 160 × 266\n   `Data Series`       `2025 Jan_total` `2024 Dec_total` `2024 Nov_total`\n   <chr>                          <dbl>            <dbl>            <dbl>\n 1 Total All Markets            59408.           60143.           58330. \n 2 America                       7373.            7501.            6657. \n 3 Antigua And Barbuda             10.7              7.2              8.3\n 4 Argentina                       31               28.3             23.3\n 5 Bahamas                         61.2             49.4             64.2\n 6 Bermuda                          2.8              7.7              0.5\n 7 Brazil                         244.             207.             187. \n 8 Canada                         113.             103.             155. \n 9 Chile                           14               13.7             10.7\n10 Colombia                        10.7             16.4             12.5\n# ℹ 150 more rows\n# ℹ 262 more variables: `2024 Oct_total` <dbl>, `2024 Sep_total` <dbl>,\n#   `2024 Aug_total` <dbl>, `2024 Jul_total` <dbl>, `2024 Jun_total` <dbl>,\n#   `2024 May_total` <dbl>, `2024 Apr_total` <dbl>, `2024 Mar_total` <dbl>,\n#   `2024 Feb_total` <dbl>, `2024 Jan_total` <dbl>, `2023 Dec_total` <dbl>,\n#   `2023 Nov_total` <dbl>, `2023 Oct_total` <dbl>, `2023 Sep_total` <dbl>,\n#   `2023 Aug_total` <dbl>, `2023 Jul_total` <dbl>, `2023 Jun_total` <dbl>, …\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(total_exports)[1] <- \"Countries\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(imports_clean)[1] <- \"Countries\"\n```\n:::\n\n\n\n### 3.3.5 Summarizing Total Trade Value by Country and Year\n\n#### 3.3.5.1 Summarizing Total Imports Value by Country and Year\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimports_modified <- imports_clean %>%\n  pivot_longer(cols = -Countries, names_to = \"Period\", values_to = \"Value\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimports_modified$Period <- ym(imports_modified$Period)\n\nimports_modified <- imports_modified %>%\n  mutate(Value = as.numeric(Value))\n\nimports_modified <- imports_modified %>%\n  mutate(Year = year(Period))\n\nimports_modified <- imports_modified %>%\n  select(Year, Countries, Value)\n\nimports_modified <- imports_modified %>%\n  group_by(Countries, Year) %>%\n  summarise(Value = sum(Value, na.rm = TRUE))\n\nimports_modified\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,680 × 3\n# Groups:   Countries [160]\n   Countries    Year Value\n   <chr>       <dbl> <dbl>\n 1 Afghanistan  2003   0.4\n 2 Afghanistan  2004   0.8\n 3 Afghanistan  2005   4.3\n 4 Afghanistan  2006   7.4\n 5 Afghanistan  2007   9.6\n 6 Afghanistan  2008   0  \n 7 Afghanistan  2009   1  \n 8 Afghanistan  2010   0.5\n 9 Afghanistan  2011   3.3\n10 Afghanistan  2012   0.9\n# ℹ 3,670 more rows\n```\n\n\n:::\n:::\n\n\n\n#### 3.3.5.2 Summarizing Total Exports Value by Country and Year\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntotalexports_modified <- total_exports %>%\n  pivot_longer(cols = -Countries, names_to = \"Period\", values_to = \"Value\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntotalexports_modified$Period <- ym(totalexports_modified$Period)\n\ntotalexports_modified <- totalexports_modified %>%\n  mutate(Value = as.numeric(Value))\n\ntotalexports_modified <- totalexports_modified %>%\n  mutate(Year = year(Period))\n\ntotalexports_modified <- totalexports_modified %>%\n  select(Year, Countries, Value)\n\ntotalexports_modified <- totalexports_modified %>%\n  group_by(Countries, Year) %>%\n  summarise(Value = sum(Value, na.rm = TRUE))\n\ntotalexports_modified\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,680 × 3\n# Groups:   Countries [160]\n   Countries    Year Value\n   <chr>       <dbl> <dbl>\n 1 Afghanistan  2003   3.4\n 2 Afghanistan  2004   2.2\n 3 Afghanistan  2005   6.2\n 4 Afghanistan  2006   9.6\n 5 Afghanistan  2007  12.2\n 6 Afghanistan  2008   6.8\n 7 Afghanistan  2009  10  \n 8 Afghanistan  2010  26.2\n 9 Afghanistan  2011  34.8\n10 Afghanistan  2012  16  \n# ℹ 3,670 more rows\n```\n\n\n:::\n:::\n\n\n\n#### 3.3.5.3 Combining Total Imports and Total Exports for Total Trade Value by Country and Year\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(imports_modified) <- colnames(totalexports_modified)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nTotal_Trade <- left_join(imports_modified, totalexports_modified, by = c(\"Countries\", \"Year\"), suffix = c(\"_Imports\", \"_TotalExports\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nTotal_Trade <- Total_Trade %>%\n  mutate(Total_Trade = Value_Imports + Value_TotalExports)\nTotal_Trade\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,680 × 5\n# Groups:   Countries [160]\n   Countries    Year Value_Imports Value_TotalExports Total_Trade\n   <chr>       <dbl>         <dbl>              <dbl>       <dbl>\n 1 Afghanistan  2003           0.4                3.4         3.8\n 2 Afghanistan  2004           0.8                2.2         3  \n 3 Afghanistan  2005           4.3                6.2        10.5\n 4 Afghanistan  2006           7.4                9.6        17  \n 5 Afghanistan  2007           9.6               12.2        21.8\n 6 Afghanistan  2008           0                  6.8         6.8\n 7 Afghanistan  2009           1                 10          11  \n 8 Afghanistan  2010           0.5               26.2        26.7\n 9 Afghanistan  2011           3.3               34.8        38.1\n10 Afghanistan  2012           0.9               16          16.9\n# ℹ 3,670 more rows\n```\n\n\n:::\n:::\n\n\n\n#### 3.3.5.4 Summarizing Total Import and Export by Commodity Section and Year\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmerchandise_trade <- read_excel(\"data/tradecommodity.xlsx\", skip = 10)\ncolnames(merchandise_trade)[1] <- \"Commodity Sections\"\n\ntime_columns <- colnames(merchandise_trade)[-1]\n\nmerchandise_trade_filtered <- merchandise_trade %>%\n  select(c(\"Commodity Sections\", time_columns[year(ym(time_columns)) %in% 2015:2024]))\n\nmerchandise_import <- merchandise_trade_filtered[7:16, ] %>%\n  mutate(Type = \"Import\")\nmerchandise_export <- merchandise_trade_filtered[20:29, ] %>%\n  mutate(Type = \"Export\")\n\nmerchandise_trade_combined <- bind_rows(merchandise_import, merchandise_export)\n\nmerchandise_trade_combined\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 × 122\n   `Commodity Sections`   `2024 Dec` `2024 Nov` `2024 Oct` `2024 Sep` `2024 Aug`\n   <chr>                       <dbl>      <dbl>      <dbl>      <dbl>      <dbl>\n 1 Beverages & Tobacco       851520.    771873.    808858.    808112.    867097.\n 2 Crude Materials (Excl…    598748.    612852     642347.    559562.    643154.\n 3 Animal & Vegetable Oi…    176576.    134924.    175904.    250542.    225965.\n 4 Chemicals & Chemical …   8845756.   8830083.   8762947.   9592894.   9021462 \n 5 Manufactured Goods       3916616.   3819011.   3658806.   3670637.   3871806.\n 6 Machinery & Transport…  66552514.  58855550.  58966439.  59395076.  57247356.\n 7 Miscellaneous Manufac…   9388482.  10205074.   8774435.   8600265.   9193338.\n 8 Miscellaneous (Exclud…   4755027    6603747.   5881429.   2713714.   3783231.\n 9 Total Merchandise Imp…  56135912.  51802132   51415560.  49068356.  49948953.\n10 Oil                      9869429.   9269639.   9243615.   7420139.   9114922.\n11 Beverages & Tobacco       448450.    386860.    420730     412506.    452801.\n12 Crude Materials (Excl…    258482.    249893.    263216.    247063.    291875.\n13 Animal & Vegetable Oi…    152676.    110486.    149548.    226106     202214.\n14 Chemicals & Chemical …   3541227.   3520359.   3289815.   3768124.   3667642.\n15 Manufactured Goods       2407339.   2391366.   2184869.   2277733.   2251667.\n16 Machinery & Transport…  31836262.  28020850   27879207.  28405007.  26813214.\n17 Miscellaneous Manufac…   4252471.   4861266.   3973757.   3697192.   3919941.\n18 Miscellaneous (Exclud…   2105002.   1798918.   2791604.   1483621.   1996332 \n19 Total Merchandise Exp…  60142882.  58330192.  56110400   54444104.  55760575 \n20 Oil                      8619544.   8792246.   8266435.   8266515.   9308131.\n# ℹ 116 more variables: `2024 Jul` <dbl>, `2024 Jun` <dbl>, `2024 May` <dbl>,\n#   `2024 Apr` <dbl>, `2024 Mar` <dbl>, `2024 Feb` <dbl>, `2024 Jan` <dbl>,\n#   `2023 Dec` <dbl>, `2023 Nov` <dbl>, `2023 Oct` <dbl>, `2023 Sep` <dbl>,\n#   `2023 Aug` <dbl>, `2023 Jul` <dbl>, `2023 Jun` <dbl>, `2023 May` <dbl>,\n#   `2023 Apr` <dbl>, `2023 Mar` <dbl>, `2023 Feb` <dbl>, `2023 Jan` <dbl>,\n#   `2022 Dec` <dbl>, `2022 Nov` <dbl>, `2022 Oct` <dbl>, `2022 Sep` <dbl>,\n#   `2022 Aug` <dbl>, `2022 Jul` <dbl>, `2022 Jun` <dbl>, `2022 May` <dbl>, …\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmerchandise_trade_type <- merchandise_trade_combined %>%\n  pivot_longer(cols = -c('Commodity Sections', Type), names_to = \"Date\", values_to = \"Value\")\n\nmerchandise_trade_type\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,400 × 4\n   `Commodity Sections` Type   Date       Value\n   <chr>                <chr>  <chr>      <dbl>\n 1 Beverages & Tobacco  Import 2024 Dec 851520.\n 2 Beverages & Tobacco  Import 2024 Nov 771873.\n 3 Beverages & Tobacco  Import 2024 Oct 808858.\n 4 Beverages & Tobacco  Import 2024 Sep 808112.\n 5 Beverages & Tobacco  Import 2024 Aug 867097.\n 6 Beverages & Tobacco  Import 2024 Jul 921720.\n 7 Beverages & Tobacco  Import 2024 Jun 746814.\n 8 Beverages & Tobacco  Import 2024 May 755585.\n 9 Beverages & Tobacco  Import 2024 Apr 758158.\n10 Beverages & Tobacco  Import 2024 Mar 753798 \n# ℹ 2,390 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\n\nmerchandise_trade_type <- merchandise_trade_combined %>%\n  pivot_longer(cols = -c('Commodity Sections', Type), names_to = \"Date\", values_to = \"Value\") %>%\n  mutate(Year = year(ym(Date)))  # Extract year from 'Date'\n\nmerchandise_trade_by_year <- merchandise_trade_type %>%\n  group_by(`Commodity Sections`, Type, Year) %>%\n  summarise(Value = sum(Value, na.rm = TRUE), .groups = 'drop')\n\nmerchandise_trade_by_year\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 200 × 4\n   `Commodity Sections`                 Type    Year    Value\n   <chr>                                <chr>  <dbl>    <dbl>\n 1 Animal & Vegetable Oils Fats & Waxes Export  2015 1080368.\n 2 Animal & Vegetable Oils Fats & Waxes Export  2016 1302809.\n 3 Animal & Vegetable Oils Fats & Waxes Export  2017 1417766.\n 4 Animal & Vegetable Oils Fats & Waxes Export  2018 1243608.\n 5 Animal & Vegetable Oils Fats & Waxes Export  2019 1665771.\n 6 Animal & Vegetable Oils Fats & Waxes Export  2020 2104569.\n 7 Animal & Vegetable Oils Fats & Waxes Export  2021 2999619.\n 8 Animal & Vegetable Oils Fats & Waxes Export  2022 3942328.\n 9 Animal & Vegetable Oils Fats & Waxes Export  2023 3574353.\n10 Animal & Vegetable Oils Fats & Waxes Export  2024 3098804.\n# ℹ 190 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\n\nmerchandise_trade_type <- merchandise_trade_combined %>%\n  pivot_longer(cols = -c('Commodity Sections', Type), names_to = \"Date\", values_to = \"Value\") %>%\n  mutate(Year = year(ym(Date)))  # Extract year from 'Date'\n\nmerchandise_trade_by_year <- merchandise_trade_type %>%\n  group_by(`Commodity Sections`, Year, Type) %>%\n  summarise(Value = sum(Value, na.rm = TRUE), .groups = 'drop')\n\nexports_data <- merchandise_trade_by_year %>%\n  filter(Type == \"Export\") %>%\n  select(`Commodity Sections`, Year, Export_Value = Value)\n\nimports_data <- merchandise_trade_by_year %>%\n  filter(Type == \"Import\") %>%\n  select(`Commodity Sections`, Year, Import_Value = Value)\n\ncombined_commodity_data <- left_join(exports_data, imports_data, by = c(\"Commodity Sections\", \"Year\"))\n\ncombined_commodity_data <- combined_commodity_data %>%\n  mutate(Total = Import_Value + Export_Value)\n\ncombined_commodity_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 100 × 5\n   `Commodity Sections`                  Year Export_Value Import_Value    Total\n   <chr>                                <dbl>        <dbl>        <dbl>    <dbl>\n 1 Animal & Vegetable Oils Fats & Waxes  2015     1080368.     1355164. 2435533.\n 2 Animal & Vegetable Oils Fats & Waxes  2016     1302809.     1551932. 2854741.\n 3 Animal & Vegetable Oils Fats & Waxes  2017     1417766.     1679301. 3097067.\n 4 Animal & Vegetable Oils Fats & Waxes  2018     1243608.     1501732. 2745341.\n 5 Animal & Vegetable Oils Fats & Waxes  2019     1665771.     1903311. 3569082.\n 6 Animal & Vegetable Oils Fats & Waxes  2020     2104569.     2353922. 4458490.\n 7 Animal & Vegetable Oils Fats & Waxes  2021     2999619.     3312861. 6312480.\n 8 Animal & Vegetable Oils Fats & Waxes  2022     3942328.     4347153. 8289480.\n 9 Animal & Vegetable Oils Fats & Waxes  2023     3574353.     3886116. 7460468.\n10 Animal & Vegetable Oils Fats & Waxes  2024     3098804.     3370374. 6469177.\n# ℹ 90 more rows\n```\n\n\n:::\n:::\n\n\n\n# 4.0 Evaluate and create make-over of data visualisation\n\n## 4.1 Data Visualisation 1: Total Merchandise Trade at Current Price, 2020 - 2024\n\n::: callout-important\n## Critic\n\nThe current visualization of total merchandise trade effectively displays both imports and exports for each year using a single stacked bar chart. The imports values are shown on top, exports values on the bottom, and the total trade value is represented as a line in between, with percentage growth or decline annotated on the chart. While this layout allows for a clear comparison between imports and exports, it still lacks the ability to highlight long-term trends. Although the chart provides a snapshot of annual trade values, it does not give enough emphasis to the overall progression or changes in trade over time. The line indicating total trade growth is a good step toward this, but additional time-series elements, like smoothing or trendlines, could enhance the understanding of fluctuations in trade values. Furthermore, integrating the total trade values more prominently within the bar structure could offer a more cohesive and visually compelling narrative, making it easier to track the evolution of Singapore's trade over the years. This approach would help in revealing patterns and trends, contributing to a more comprehensive view of how imports and exports are evolving alongside total trade.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntotal_trade_filtered <- Total_Trade %>%\n  filter(Countries == \"Total All Markets\" & Year >= 2019 & Year <= 2024)\n\ntotal_trade_filtered$Year <- as.factor(total_trade_filtered$Year)\n\ndodge_pos <- position_dodge(width = 0.6)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntotal_trade_filtered <- total_trade_filtered %>%\n  arrange(Year) %>%\n  mutate(Total_Trade_Growth = (Total_Trade / lag(Total_Trade) - 1) * 100)\n\n\nmidpoint <- 0  \n\np <- ggplot(total_trade_filtered) +  \n  geom_bar(aes(x = Year, y = Value_Imports, fill = \"Imports\"), \n           stat = \"identity\", position = \"identity\", width = 0.5) +\n  geom_bar(aes(x = Year, y = -Value_TotalExports, fill = \"Exports\"),\n           stat = \"identity\", position = \"identity\", width = 0.5) +\n  geom_line(aes(x = Year, y = Total_Trade, group = 1, color = \"Total Trade\"), \n            size = 1) +\n  geom_point(aes(x = Year, y = Total_Trade, color = \"Total Trade\"), \n             size = 3) +\n  geom_text(aes(x = Year, y = midpoint, label = scales::comma(Total_Trade)), \n            size = 3, fontface = \"bold\", color = \"black\") +\n  geom_text(aes(x = Year, y = Total_Trade * 1.05, \n                label = ifelse(!is.na(Total_Trade_Growth), paste0(round(Total_Trade_Growth, 1), \"%\"), \"\")), \n            size = 3, fontface = \"bold\", color = \"#636363\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + \n  scale_y_continuous(breaks = seq(-1500000, 1500000, by = 250000),\n                     limits = c(-1500000, 1500000),\n                     labels = function(x) scales::comma(abs(x))) +\n  labs(title = \"Total Merchandise Trade (Imports & Exports) - All Markets\", \n       y = \"Trade Value\", x = \"Year\") +\n  scale_fill_manual(values = c(\"Imports\" = \"#6BAED6\", \"Exports\" = \"#FC9272\")) +\n  scale_color_manual(values = c(\"Total Trade\" = \"#636363\")) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n\nggplotly(p, tooltip = c(\"x\", \"y\")) %>%\n  layout(height = 400, width = 600)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-0bf0b23c6660bbf42f8d\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-0bf0b23c6660bbf42f8d\">{\"x\":{\"data\":[{\"orientation\":\"v\",\"width\":[0.5,0.5,0.5,0.5,0.5,0.5],\"base\":[0,0,0,0,0,0],\"x\":[1,2,3,4,5,6],\"y\":[489712.29999999999,453467.20000000001,545881.90000000002,655436,567319.19999999995,611359.5],\"text\":[\"Year: 2019<br />Value_Imports: 489712.3\",\"Year: 2020<br />Value_Imports: 453467.2\",\"Year: 2021<br />Value_Imports: 545881.9\",\"Year: 2022<br />Value_Imports: 655436.0\",\"Year: 2023<br />Value_Imports: 567319.2\",\"Year: 2024<br />Value_Imports: 611359.5\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(107,174,214,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"(Imports,1)\",\"legendgroup\":\"(Imports,1)\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"mode\":\"\",\"frame\":null},{\"orientation\":\"v\",\"width\":[0.5,0.5,0.5,0.5,0.5,0.5],\"base\":[-532514.19999999995,-515644.70000000001,-614081,-709966.80000000005,-638403.40000000002,-674505],\"x\":[1,2,3,4,5,6],\"y\":[532514.19999999995,515644.70000000001,614081,709966.80000000005,638403.40000000002,674505],\"text\":[\"Year: 2019<br />-Value_TotalExports: 532514.2\",\"Year: 2020<br />-Value_TotalExports: 515644.7\",\"Year: 2021<br />-Value_TotalExports: 614081.0\",\"Year: 2022<br />-Value_TotalExports: 709966.8\",\"Year: 2023<br />-Value_TotalExports: 638403.4\",\"Year: 2024<br />-Value_TotalExports: 674505.0\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(252,146,114,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"(Exports,1)\",\"legendgroup\":\"(Exports,1)\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"mode\":\"\",\"frame\":null},{\"x\":[1,2,3,4,5,6],\"y\":[1022226.5,969111.90000000002,1159962.8999999999,1365402.8,1205722.6000000001,1285864.5],\"text\":[\"Year: 2019<br />Total_Trade: 1022226.5\",\"Year: 2020<br />Total_Trade:  969111.9\",\"Year: 2021<br />Total_Trade: 1159962.9\",\"Year: 2022<br />Total_Trade: 1365402.8\",\"Year: 2023<br />Total_Trade: 1205722.6\",\"Year: 2024<br />Total_Trade: 1285864.5\"],\"type\":\"scatter\",\"mode\":\"lines+markers\",\"line\":{\"width\":3.7795275590551185,\"color\":\"rgba(99,99,99,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"(Total Trade,1)\",\"legendgroup\":\"(Total Trade,1)\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(99,99,99,1)\",\"opacity\":1,\"size\":11.338582677165356,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(99,99,99,1)\"}},\"frame\":null},{\"x\":[1,2,3,4,5,6],\"y\":[0,0,0,0,0,0],\"text\":[\"1,022,226\",\"969,112\",\"1,159,963\",\"1,365,403\",\"1,205,723\",\"1,285,864\"],\"hovertext\":[\"Year: 2019<br />midpoint: 0\",\"Year: 2020<br />midpoint: 0\",\"Year: 2021<br />midpoint: 0\",\"Year: 2022<br />midpoint: 0\",\"Year: 2023<br />midpoint: 0\",\"Year: 2024<br />midpoint: 0\"],\"textfont\":{\"size\":11.338582677165356,\"color\":\"rgba(0,0,0,1)\"},\"type\":\"scatter\",\"mode\":\"text\",\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1,2,3,4,5,6],\"y\":[1073337.825,1017567.4950000001,1217961.0449999999,1433672.9400000002,1266008.7300000002,1350157.7250000001],\"text\":[\"\",\"-5.2%\",\"19.7%\",\"17.7%\",\"-11.7%\",\"6.6%\"],\"hovertext\":[\"Year: 2019<br />Total_Trade * 1.05: 1073338\",\"Year: 2020<br />Total_Trade * 1.05: 1017567\",\"Year: 2021<br />Total_Trade * 1.05: 1217961\",\"Year: 2022<br />Total_Trade * 1.05: 1433673\",\"Year: 2023<br />Total_Trade * 1.05: 1266009\",\"Year: 2024<br />Total_Trade * 1.05: 1350158\"],\"textfont\":{\"size\":11.338582677165356,\"color\":\"rgba(99,99,99,1)\"},\"type\":\"scatter\",\"mode\":\"text\",\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":78.173515981735179},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Total Merchandise Trade (Imports & Exports) - All Markets\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,6.5999999999999996],\"tickmode\":\"array\",\"ticktext\":[\"2019\",\"2020\",\"2021\",\"2022\",\"2023\",\"2024\"],\"tickvals\":[1,2,3,3.9999999999999996,5,6],\"categoryorder\":\"array\",\"categoryarray\":[\"2019\",\"2020\",\"2021\",\"2022\",\"2023\",\"2024\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Year\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-1650000,1650000],\"tickmode\":\"array\",\"ticktext\":[\"1,500,000\",\"1,250,000\",\"1,000,000\",\"750,000\",\"500,000\",\"250,000\",\"0\",\"250,000\",\"500,000\",\"750,000\",\"1,000,000\",\"1,250,000\",\"1,500,000\"],\"tickvals\":[-1500000,-1250000,-1000000,-750000.00000000012,-500000,-250000,0,250000.00000000023,500000,750000,1000000,1250000,1500000],\"categoryorder\":\"array\",\"categoryarray\":[\"1,500,000\",\"1,250,000\",\"1,000,000\",\"750,000\",\"500,000\",\"250,000\",\"0\",\"250,000\",\"500,000\",\"750,000\",\"1,000,000\",\"1,250,000\",\"1,500,000\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Trade Value\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"fill<br />colour\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\",\"height\":400,\"width\":600},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"503827e989\":{\"x\":{},\"y\":{},\"fill\":{},\"type\":\"bar\"},\"503870a22c9b\":{\"x\":{},\"y\":{},\"fill\":{}},\"50382551101\":{\"x\":{},\"y\":{},\"colour\":{}},\"5038796816fa\":{\"x\":{},\"y\":{},\"colour\":{}},\"50386e624a83\":{\"x\":{},\"y\":{},\"label\":{}},\"503877033707\":{\"x\":{},\"y\":{},\"label\":{}}},\"cur_data\":\"503827e989\",\"visdat\":{\"503827e989\":[\"function (y) \",\"x\"],\"503870a22c9b\":[\"function (y) \",\"x\"],\"50382551101\":[\"function (y) \",\"x\"],\"5038796816fa\":[\"function (y) \",\"x\"],\"50386e624a83\":[\"function (y) \",\"x\"],\"503877033707\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n## 4.2 Data Visualisation 2: Merchandise Trade Performance with Major Trading Partners (2024)\n\n::: callout-important\n## Critic\n\nThe current visualization of merchandise trade performance with major trading partners provides useful insights into the balance between imports and exports. The scatter plot, with exports on the x-axis and imports on the y-axis, effectively places countries with higher exports on the lower right side and those with higher imports on the upper left. The use of bubble sizes to represent total trade value is also intuitive, giving a sense of the economic scale of each country’s trade with Singapore. However, the size of the bubbles may present some challenges. When bubbles are close together, it becomes difficult to interpret the values accurately, especially when there is overlap. The scatter plot itself doesn’t allow for an easy view of the specific trade balance (exports vs. imports) for each country, requiring users to rely on the tooltips for precise information. Additionally, while the diagonal line helps to differentiate countries with more exports or imports, it does not provide much further detail on the magnitude of the imbalance. To improve clarity, it could be beneficial to add a visual indicator or color gradient showing the trade balance (i.e., a red-green scale), making it easier to spot trends in trade surpluses or deficits. Lastly, the chart's effectiveness could be enhanced by simplifying the plot elements, such as by labeling the countries directly on the plot, making it easier to associate the bubbles with their respective countries without relying solely on tooltips.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(Total_Trade %>% filter(Year == 2024) %>% head())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n# Groups:   Countries [6]\n  Countries    Year Value_Imports Value_TotalExports Total_Trade\n  <chr>       <dbl>         <dbl>              <dbl>       <dbl>\n1 Afghanistan  2024           0.2                 1          1.2\n2 Africa       2024        6850.              12712.     19562. \n3 Algeria      2024         282.                101        383. \n4 America      2024       95346.              78798.    174144. \n5 Angola       2024         899                 202.      1101. \n6 Antarctica   2024           0                   0          0  \n```\n\n\n:::\n\n```{.r .cell-code}\ntop_trade_partners <- Total_Trade %>%\n  filter(Year == 2024) %>% \n  filter(!grepl(\"^Total All Markets$|^America$|^Europe$|^Asia$|^Africa$|^Oceania$|^Other Markets\", trimws(Countries))) %>% \n  arrange(desc(Total_Trade)) %>%\n  head(10)\n\ntop_trade_partners$Value_TotalExports <- as.numeric(top_trade_partners$Value_TotalExports)\ntop_trade_partners$Value_Imports <- as.numeric(top_trade_partners$Value_Imports)\n\nmax_exports <- max(top_trade_partners$Value_TotalExports, na.rm = TRUE)\nmax_imports <- max(top_trade_partners$Value_Imports, na.rm = TRUE)\n\nprint(paste(\"Max Exports:\", max_exports))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Max Exports: 94442.7\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(paste(\"Max Imports:\", max_imports))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Max Imports: 84318.4\"\n```\n\n\n:::\n\n```{.r .cell-code}\ncountry_colors <- c(\"China\" = \"blue\", \"Malaysia\" = \"red\", \"United States\" = \"green\", \n                    \"Taiwan\" = \"purple\", \"Hong Kong\" = \"orange\", \"Indonesia\" = \"pink\", \n                    \"Korea\" = \"cyan\", \"Japan\" = \"yellow\", \"Thailand\" = \"brown\", \"India\" = \"gray\")\n\np <- ggplot(top_trade_partners, aes(x = Value_TotalExports, \n                                    y = Value_Imports, \n                                    size = Total_Trade, \n                                    color = Countries, \n                                    text = paste0(\"Country: \", Countries, \n                                                  \"<br>Exports: \", scales::comma(Value_TotalExports),\n                                                  \"<br>Imports: \", scales::comma(Value_Imports),\n                                                  \"<br>Total Trade: \", scales::comma(Total_Trade)))) +\n  geom_point(alpha = 0.7) + \n  scale_size_continuous(range = c(5, 15), labels = scales::comma) + \n  scale_x_continuous(labels = scales::comma, \n                     limits = c(0, max_exports * 1.1)) +\n  scale_y_continuous(labels = scales::comma, \n                     limits = c(0, max_imports * 1.1)) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"black\") + \n  scale_color_manual(values = country_colors) +\n  geom_text(aes(label = gsub(\"United States\", \"US\", Countries)),\n            check_overlap = TRUE, \n            size = 3, \n            color = \"black\",\n            fontface = \"bold\", \n            stroke = 0.5,\n            nudge_y = 3000) +\n  theme_minimal() +\n  labs(title = \"Top 10 Merchandise Trade Partners (2024)\",\n       x = \"Exports (SGD)\", \n       y = \"Imports (SGD)\", \n       size = \"Total Trade Value\", \n       color = \"Country\") +  # Color by Country\n  theme(legend.position = \"right\",\n        panel.grid.major = element_line(size = 0.5, color = \"gray\"), \n        panel.grid.minor = element_line(size = 0.25, color = \"lightgray\"))\n\nggplotly(p, tooltip = \"text\") %>%\n  layout(\n    height = 400, \n    width = 600, \n    dragmode = \"zoom\",\n    updatemenus = list(\n      list(\n        buttons = list(\n          list(method = \"relayout\", args = list(\"xaxis.range\", c(0, max_exports * 1.1))),\n          list(method = \"relayout\", args = list(\"yaxis.range\", c(0, max_imports * 1.1)))\n        )\n      )\n    )\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-1c2c1f22d5a262fbd1d6\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1c2c1f22d5a262fbd1d6\">{\"x\":{\"data\":[{\"x\":[94442.699999999997],\"y\":[75739.600000000006],\"text\":\"Country: China<br>Exports: 94,443<br>Imports: 75,740<br>Total Trade: 170,182\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,0,255,1)\",\"opacity\":0.69999999999999996,\"size\":56.692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,255,1)\"}},\"hoveron\":\"points\",\"name\":\"China\",\"legendgroup\":\"China\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[73878.600000000006],\"y\":[4743.6000000000004],\"text\":\"Country: Hong Kong<br>Exports: 73,879<br>Imports: 4,744<br>Total Trade: 78,622\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,165,0,1)\",\"opacity\":0.69999999999999996,\"size\":40.867869200049583,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(255,165,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Hong Kong\",\"legendgroup\":\"Hong Kong\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[20218.700000000001],\"y\":[11675.200000000001],\"text\":\"Country: India<br>Exports: 20,219<br>Imports: 11,675<br>Total Trade: 31,894\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(190,190,190,1)\",\"opacity\":0.69999999999999996,\"size\":18.897637795275593,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(190,190,190,1)\"}},\"hoveron\":\"points\",\"name\":\"India\",\"legendgroup\":\"India\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[53216.5],\"y\":[20938.400000000001],\"text\":\"Country: Indonesia<br>Exports: 53,216<br>Imports: 20,938<br>Total Trade: 74,155\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,192,203,1)\",\"opacity\":0.69999999999999996,\"size\":39.791297888913171,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(255,192,203,1)\"}},\"hoveron\":\"points\",\"name\":\"Indonesia\",\"legendgroup\":\"Indonesia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[23706.799999999999],\"y\":[29695.5],\"text\":\"Country: Japan<br>Exports: 23,707<br>Imports: 29,696<br>Total Trade: 53,402\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,255,0,1)\",\"opacity\":0.69999999999999996,\"size\":33.803211377540862,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(255,255,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Japan\",\"legendgroup\":\"Japan\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[28422.799999999999],\"y\":[38395.300000000003],\"text\":\"Country: Korea, Rep Of<br>Exports: 28,423<br>Imports: 38,395<br>Total Trade: 66,818\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(127,127,127,1)\",\"opacity\":0.69999999999999996,\"size\":37.891263430701137,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(127,127,127,1)\"}},\"hoveron\":\"points\",\"name\":\"Korea, Rep Of\",\"legendgroup\":\"Korea, Rep Of\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[69935.600000000006],\"y\":[68707.899999999994],\"text\":\"Country: Malaysia<br>Exports: 69,936<br>Imports: 68,708<br>Total Trade: 138,644\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,0,0,1)\",\"opacity\":0.69999999999999996,\"size\":52.104494544578571,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(255,0,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Malaysia\",\"legendgroup\":\"Malaysia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[32469.5],\"y\":[84318.399999999994],\"text\":\"Country: Taiwan<br>Exports: 32,470<br>Imports: 84,318<br>Total Trade: 116,788\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(160,32,240,1)\",\"opacity\":0.69999999999999996,\"size\":48.51068773155167,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(160,32,240,1)\"}},\"hoveron\":\"points\",\"name\":\"Taiwan\",\"legendgroup\":\"Taiwan\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[29297.900000000001],\"y\":[15177.1],\"text\":\"Country: Thailand<br>Exports: 29,298<br>Imports: 15,177<br>Total Trade: 44,475\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(165,42,42,1)\",\"opacity\":0.69999999999999996,\"size\":30.297614074093488,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(165,42,42,1)\"}},\"hoveron\":\"points\",\"name\":\"Thailand\",\"legendgroup\":\"Thailand\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[57621.199999999997],\"y\":[74368.100000000006],\"text\":\"Country: United States<br>Exports: 57,621<br>Imports: 74,368<br>Total Trade: 131,989\",\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,255,0,1)\",\"opacity\":0.69999999999999996,\"size\":51.052873707732047,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,255,0,1)\"}},\"hoveron\":\"points\",\"name\":\"United States\",\"legendgroup\":\"United States\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[-5194.3485000000001,109081.31849999999],\"y\":[-5194.3485000000001,109081.31849999999],\"text\":\"\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"dash\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[94442.699999999997,69935.600000000006,57621.199999999997,32469.5,73878.600000000006,53216.5,28422.799999999999,23706.799999999999,29297.900000000001,20218.700000000001],\"y\":[78739.600000000006,71707.899999999994,77368.100000000006,87318.399999999994,7743.6000000000004,23938.400000000001,41395.300000000003,32695.5,18177.099999999999,14675.200000000001],\"text\":[\"China\",\"Malaysia\",\"US\",\"Taiwan\",\"Hong Kong\",\"Indonesia\",\"Korea, Rep Of\",\"Japan\",\"Thailand\",\"India\"],\"hovertext\":[\"Country: China<br>Exports: 94,443<br>Imports: 75,740<br>Total Trade: 170,182\",\"Country: Malaysia<br>Exports: 69,936<br>Imports: 68,708<br>Total Trade: 138,644\",\"Country: United States<br>Exports: 57,621<br>Imports: 74,368<br>Total Trade: 131,989\",\"Country: Taiwan<br>Exports: 32,470<br>Imports: 84,318<br>Total Trade: 116,788\",\"Country: Hong Kong<br>Exports: 73,879<br>Imports: 4,744<br>Total Trade: 78,622\",\"Country: Indonesia<br>Exports: 53,216<br>Imports: 20,938<br>Total Trade: 74,155\",\"Country: Korea, Rep Of<br>Exports: 28,423<br>Imports: 38,395<br>Total Trade: 66,818\",\"Country: Japan<br>Exports: 23,707<br>Imports: 29,696<br>Total Trade: 53,402\",\"Country: Thailand<br>Exports: 29,298<br>Imports: 15,177<br>Total Trade: 44,475\",\"Country: India<br>Exports: 20,219<br>Imports: 11,675<br>Total Trade: 31,894\"],\"textfont\":{\"size\":11.338582677165356,\"color\":\"rgba(0,0,0,1)\"},\"type\":\"scatter\",\"mode\":\"text\",\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":60.639269406392714},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Top 10 Merchandise Trade Partners (2024)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-5194.3485000000001,109081.31849999999],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"25,000\",\"50,000\",\"75,000\",\"100,000\"],\"tickvals\":[0,25000.000000000004,50000,75000,100000],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"25,000\",\"50,000\",\"75,000\",\"100,000\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(190,190,190,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Exports (SGD)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-4637.5120000000006,97387.752000000008],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"25,000\",\"50,000\",\"75,000\"],\"tickvals\":[0,25000,50000,75000],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"25,000\",\"50,000\",\"75,000\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(190,190,190,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Imports (SGD)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"Total Trade Value<br />Country\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\",\"height\":400,\"width\":600,\"dragmode\":\"zoom\",\"updatemenus\":[{\"buttons\":[{\"method\":\"relayout\",\"args\":[\"xaxis.range\",[0,103886.97]]},{\"method\":\"relayout\",\"args\":[\"yaxis.range\",[0,92750.240000000005]]}]}]},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"5038296276c9\":{\"x\":{},\"y\":{},\"size\":{},\"colour\":{},\"text\":{},\"type\":\"scatter\"},\"5038435f236c\":{\"intercept\":{},\"slope\":{}},\"503845491f51\":{\"x\":{},\"y\":{},\"size\":{},\"colour\":{},\"text\":{},\"label\":{}}},\"cur_data\":\"5038296276c9\",\"visdat\":{\"5038296276c9\":[\"function (y) \",\"x\"],\"5038435f236c\":[\"function (y) \",\"x\"],\"503845491f51\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n## 4.3 Data Visualisation 3: Non-Oil Merchandise Trade by Major Commodity Sections (2024)\n\n::: callout-important\n## Critic\n\nThe bar chart effectively compares exports and imports across major commodity sections, making it clear which sections contribute more to trade. However, a simple grouped bar chart might not always provide the best comparison across multiple sections, particularly when there are numerous categories or a large variance in trade values. In this case, the top five commodity sections are selected, which helps to focus the analysis, but the chart might still be challenging to interpret in terms of proportional trade imbalances. The visual clutter that could arise from multiple sections with significantly different values could overwhelm the viewer, especially if there were more than five sections being compared.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_commodity_data_filtered <- combined_commodity_data %>%\n  filter(Year == 2024) %>%\n  filter(`Commodity Sections` != \"Total Merchandise Exports, (At Current Prices)\")\n\ncombined_commodity_data_filtered <- combined_commodity_data_filtered %>%\n  mutate(Total_Trade = Export_Value + Import_Value)\n\ntop_5_commodities <- combined_commodity_data_filtered %>%\n  group_by(`Commodity Sections`) %>%\n  summarise(Total_Section_Value = sum(Total_Trade), .groups = \"drop\") %>%\n  slice_max(Total_Section_Value, n = 5) %>%\n  pull(`Commodity Sections`)\n\ndata_top_5 <- combined_commodity_data_filtered %>%\n  filter(`Commodity Sections` %in% top_5_commodities)\n\ndata_top_5_long <- data_top_5 %>%\n  pivot_longer(cols = c(Export_Value, Import_Value), \n               names_to = \"Type\", \n               values_to = \"Value\") %>%\n  mutate(Type = recode(Type, \n                       \"Export_Value\" = \"Exports\", \n                       \"Import_Value\" = \"Imports\"))\n\np <- ggplot(data_top_5_long, aes(x = reorder(`Commodity Sections`, -Value), \n                                 y = Value, fill = Type, \n                                 text = paste(\"Trade Value: SGD\", scales::comma(Value)))) +\n  geom_bar(stat = \"identity\", position = \"dodge\", width = 0.7) +\n  scale_fill_manual(values = c(\"Exports\" = \"#6BAED6\", \"Imports\" = \"#FC9272\")) +\n  theme_minimal() +\n  labs(title = \"Top 5 Non-Oil Merchandise Trade by Major Commodity Sections (2024)\",\n       x = \"Commodity Section\", \n       y = \"Trade Value (SGD)\",\n       fill = \"Trade Type\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1), \n        legend.position = \"bottom\") +\n  scale_y_continuous(labels = scales::comma)\n\ninteractive_plot <- ggplotly(p, tooltip = \"text\")\n\ninteractive_plot\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-4964c69ccc5f2838812e\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-4964c69ccc5f2838812e\">{\"x\":{\"data\":[{\"orientation\":\"v\",\"width\":[0.34999999999999964,0.35000000000000009,0.34999999999999964,0.34999999999999964,0.35000000000000009],\"base\":[0,0,0,0,0],\"x\":[2.8250000000000002,0.82499999999999996,4.8250000000000002,3.8250000000000002,1.825],\"y\":[42766218.200000003,322073527.80000001,28569545.600000001,47710175,116019012],\"text\":[\"Trade Value: SGD 42,766,218\",\"Trade Value: SGD 322,073,528\",\"Trade Value: SGD 28,569,546\",\"Trade Value: SGD 47,710,175\",\"Trade Value: SGD 116,019,012\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(107,174,214,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"Exports\",\"legendgroup\":\"Exports\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":[0.34999999999999964,0.35000000000000009,0.34999999999999964,0.34999999999999964,0.34999999999999987],\"base\":[0,0,0,0,0],\"x\":[3.1749999999999998,1.175,5.1749999999999998,4.1749999999999998,2.1749999999999998],\"y\":[112283177.09999999,685295523.39999998,56724858.5,105277267.2,117623526.59999999],\"text\":[\"Trade Value: SGD 112,283,177\",\"Trade Value: SGD 685,295,523\",\"Trade Value: SGD 56,724,858\",\"Trade Value: SGD 105,277,267\",\"Trade Value: SGD 117,623,527\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(252,146,114,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"Imports\",\"legendgroup\":\"Imports\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":142.26287434633551,\"l\":89.863013698630155},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Top 5 Non-Oil Merchandise Trade by Major Commodity Sections (2024)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,5.5999999999999996],\"tickmode\":\"array\",\"ticktext\":[\"Machinery & Transport Equipment\",\"Oil\",\"Chemicals & Chemical Products\",\"Miscellaneous Manufactured Articles\",\"Miscellaneous (Excluding Oil Bunkers)\"],\"tickvals\":[1,2,3,4,5],\"categoryorder\":\"array\",\"categoryarray\":[\"Machinery & Transport Equipment\",\"Oil\",\"Chemicals & Chemical Products\",\"Miscellaneous Manufactured Articles\",\"Miscellaneous (Excluding Oil Bunkers)\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-45,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Commodity Section\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-34264776.170000002,719560299.56999993],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"200,000,000\",\"400,000,000\",\"600,000,000\"],\"tickvals\":[0,200000000,400000000.00000006,600000000],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"200,000,000\",\"400,000,000\",\"600,000,000\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Trade Value (SGD)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"Trade Type\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"503847d41acf\":{\"x\":{},\"y\":{},\"fill\":{},\"text\":{},\"type\":\"bar\"}},\"cur_data\":\"503847d41acf\",\"visdat\":{\"503847d41acf\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n# 5.0 Time Series Analysis\n\n## 5.1 Total Market Trade Over the Years\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTotal_Trade_Growth <- Total_Trade %>%\n  filter(Countries == \"Total All Markets\", Year != \"2025\") %>%\n  arrange(Year) %>%\n  mutate(Percentage_Growth = (Total_Trade - lag(Total_Trade)) / lag(Total_Trade) * 100)\n\ntsa <- ggplot(Total_Trade_Growth, aes(x = Year, y = Total_Trade)) +\n  geom_line(size = 0.5, color = \"blue\") +\n  geom_point(color = \"red\") +\n  scale_y_continuous(labels = scales::comma) +\n  theme_minimal() +\n  labs(title = \"Total Market Trade Over the Years\", \n       x = \"Year\", \n       y = \"Total Trade (SGD)\") +\n  geom_text(aes(y = Total_Trade * 1.05,\n                label = ifelse(!is.na(Percentage_Growth), \n                               paste0(round(Percentage_Growth, 1), \"%\"), \"\")), \n            vjust = -0.5, color = \"black\", size = 3)\n\nggplotly(tsa)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-155c39153d5cd7214d1f\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-155c39153d5cd7214d1f\">{\"x\":{\"data\":[{\"x\":[2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024],\"y\":[519217.5,630954.19999999995,717997,814898.90000000002,852490.90000000002,936315.80000000005,751300.80000000005,907036.09999999998,991558.69999999995,1001544.3,1011077.8,1004649.8,915218.69999999995,870216,967102.30000000005,1055859.2,1022226.5,969111.90000000002,1159962.8999999999,1365402.8,1205722.6000000001,1285864.5],\"text\":[\"Year: 2003<br />Total_Trade:  519217.5\",\"Year: 2004<br />Total_Trade:  630954.2\",\"Year: 2005<br />Total_Trade:  717997.0\",\"Year: 2006<br />Total_Trade:  814898.9\",\"Year: 2007<br />Total_Trade:  852490.9\",\"Year: 2008<br />Total_Trade:  936315.8\",\"Year: 2009<br />Total_Trade:  751300.8\",\"Year: 2010<br />Total_Trade:  907036.1\",\"Year: 2011<br />Total_Trade:  991558.7\",\"Year: 2012<br />Total_Trade: 1001544.3\",\"Year: 2013<br />Total_Trade: 1011077.8\",\"Year: 2014<br />Total_Trade: 1004649.8\",\"Year: 2015<br />Total_Trade:  915218.7\",\"Year: 2016<br />Total_Trade:  870216.0\",\"Year: 2017<br />Total_Trade:  967102.3\",\"Year: 2018<br />Total_Trade: 1055859.2\",\"Year: 2019<br />Total_Trade: 1022226.5\",\"Year: 2020<br />Total_Trade:  969111.9\",\"Year: 2021<br />Total_Trade: 1159962.9\",\"Year: 2022<br />Total_Trade: 1365402.8\",\"Year: 2023<br />Total_Trade: 1205722.6\",\"Year: 2024<br />Total_Trade: 1285864.5\"],\"type\":\"scatter\",\"mode\":\"lines+markers\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,255,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,0,0,1)\",\"opacity\":1,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(255,0,0,1)\"}},\"frame\":null},{\"x\":[2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024],\"y\":[545178.375,662501.91000000003,753896.84999999998,855643.84500000009,895115.44500000007,983131.59000000008,788865.84000000008,952387.90500000003,1041136.635,1051621.5150000001,1061631.6900000002,1054882.29,960979.63500000001,913726.80000000005,1015457.415,1108652.1599999999,1073337.825,1017567.4950000001,1217961.0449999999,1433672.9400000002,1266008.7300000002,1350157.7250000001],\"text\":[\"\",\"21.5%\",\"13.8%\",\"13.5%\",\"4.6%\",\"9.8%\",\"-19.8%\",\"20.7%\",\"9.3%\",\"1%\",\"1%\",\"-0.6%\",\"-8.9%\",\"-4.9%\",\"11.1%\",\"9.2%\",\"-3.2%\",\"-5.2%\",\"19.7%\",\"17.7%\",\"-11.7%\",\"6.6%\"],\"hovertext\":[\"Year: 2003<br />Total_Trade * 1.05:  545178.4<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: \",\"Year: 2004<br />Total_Trade * 1.05:  662501.9<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: 21.5%\",\"Year: 2005<br />Total_Trade * 1.05:  753896.8<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: 13.8%\",\"Year: 2006<br />Total_Trade * 1.05:  855643.8<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: 13.5%\",\"Year: 2007<br />Total_Trade * 1.05:  895115.4<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: 4.6%\",\"Year: 2008<br />Total_Trade * 1.05:  983131.6<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: 9.8%\",\"Year: 2009<br />Total_Trade * 1.05:  788865.8<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: -19.8%\",\"Year: 2010<br />Total_Trade * 1.05:  952387.9<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: 20.7%\",\"Year: 2011<br />Total_Trade * 1.05: 1041136.6<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: 9.3%\",\"Year: 2012<br />Total_Trade * 1.05: 1051621.5<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: 1%\",\"Year: 2013<br />Total_Trade * 1.05: 1061631.7<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: 1%\",\"Year: 2014<br />Total_Trade * 1.05: 1054882.3<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: -0.6%\",\"Year: 2015<br />Total_Trade * 1.05:  960979.6<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: -8.9%\",\"Year: 2016<br />Total_Trade * 1.05:  913726.8<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: -4.9%\",\"Year: 2017<br />Total_Trade * 1.05: 1015457.4<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: 11.1%\",\"Year: 2018<br />Total_Trade * 1.05: 1108652.2<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: 9.2%\",\"Year: 2019<br />Total_Trade * 1.05: 1073337.8<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: -3.2%\",\"Year: 2020<br />Total_Trade * 1.05: 1017567.5<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: -5.2%\",\"Year: 2021<br />Total_Trade * 1.05: 1217961.0<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: 19.7%\",\"Year: 2022<br />Total_Trade * 1.05: 1433672.9<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: 17.7%\",\"Year: 2023<br />Total_Trade * 1.05: 1266008.7<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: -11.7%\",\"Year: 2024<br />Total_Trade * 1.05: 1350157.7<br />ifelse(!is.na(Percentage_Growth), paste0(round(Percentage_Growth, ...: 6.6%\"],\"textfont\":{\"size\":11.338582677165356,\"color\":\"rgba(0,0,0,1)\"},\"type\":\"scatter\",\"mode\":\"text\",\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":78.173515981735179},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Total Market Trade Over the Years\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[2001.95,2025.05],\"tickmode\":\"array\",\"ticktext\":[\"2005\",\"2010\",\"2015\",\"2020\",\"2025\"],\"tickvals\":[2005,2010,2015,2020,2025],\"categoryorder\":\"array\",\"categoryarray\":[\"2005\",\"2010\",\"2015\",\"2020\",\"2025\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Year\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[473494.728,1479395.7120000003],\"tickmode\":\"array\",\"ticktext\":[\"500,000\",\"750,000\",\"1,000,000\",\"1,250,000\"],\"tickvals\":[500000,750000,1000000,1250000],\"categoryorder\":\"array\",\"categoryarray\":[\"500,000\",\"750,000\",\"1,000,000\",\"1,250,000\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Total Trade (SGD)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"50383c117c67\":{\"x\":{},\"y\":{},\"type\":\"scatter\"},\"5038534244a\":{\"x\":{},\"y\":{}},\"503818db4ad9\":{\"x\":{},\"y\":{},\"label\":{}}},\"cur_data\":\"50383c117c67\",\"visdat\":{\"50383c117c67\":[\"function (y) \",\"x\"],\"5038534244a\":[\"function (y) \",\"x\"],\"503818db4ad9\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n## 5.2 Top 10 Countries by Total Market Trade Over the Years\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexcluded_regions <- c(\"Total All Markets\", \"America\", \"Asia\", \"Africa\", \"Oceania\", \"Europe\", \"Other Markets America\", \"Other Markets Asia\", \"Other Markets Africa\", \"Other Markets Oceania\", \"Other Markets Europe\")\n\nTotal_Trade <- Total_Trade %>%\n  filter(!Countries %in% excluded_regions, Year !=2025)\n\ntop_10_countries <- Total_Trade %>%\n  group_by(Countries) %>%\n  summarise(Total_Trade_Sum = sum(Total_Trade, na.rm = TRUE)) %>%\n  top_n(10, Total_Trade_Sum) %>%\n  pull(Countries)\n\nTotal_Trade_Top10 <- Total_Trade %>%\n  filter(Countries %in% top_10_countries)\n\nmts <- ggplot(Total_Trade_Top10, aes(x = Year, y = Total_Trade, color = Countries)) +\n  geom_line(size = 0.8) +\n  scale_y_continuous(labels = scales::comma) +\n  theme_minimal() +\n  labs(title = \"Top 10 Countries by Total Market Trade Over the Years\",\n       x = \"Year\", y = \"Total Trade (SGD)\", color = \"Country\") +\n  theme(legend.position = \"bottom\", \n        legend.box.spacing = unit(0.5, \"cm\"))\n\nggplotly(mts)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-06372bd12fe82cd00367\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-06372bd12fe82cd00367\">{\"x\":{\"data\":[{\"x\":[2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024],\"y\":[36914.5,53328.699999999997,67134.700000000012,85487.800000000003,91657.200000000012,91478.800000000003,75763.200000000012,95334.899999999994,101748.10000000001,104905.7,116664.7,125546.39999999999,128569.70000000001,117198.3,137114.89999999999,135020.5,137312.39999999999,136205,164252.20000000001,175025.40000000002,167035.39999999999,170182.29999999999],\"text\":[\"Year: 2003<br />Total_Trade:  36914.5<br />Countries: China\",\"Year: 2004<br />Total_Trade:  53328.7<br />Countries: China\",\"Year: 2005<br />Total_Trade:  67134.7<br />Countries: China\",\"Year: 2006<br />Total_Trade:  85487.8<br />Countries: China\",\"Year: 2007<br />Total_Trade:  91657.2<br />Countries: China\",\"Year: 2008<br />Total_Trade:  91478.8<br />Countries: China\",\"Year: 2009<br />Total_Trade:  75763.2<br />Countries: China\",\"Year: 2010<br />Total_Trade:  95334.9<br />Countries: China\",\"Year: 2011<br />Total_Trade: 101748.1<br />Countries: China\",\"Year: 2012<br />Total_Trade: 104905.7<br />Countries: China\",\"Year: 2013<br />Total_Trade: 116664.7<br />Countries: China\",\"Year: 2014<br />Total_Trade: 125546.4<br />Countries: China\",\"Year: 2015<br />Total_Trade: 128569.7<br />Countries: China\",\"Year: 2016<br />Total_Trade: 117198.3<br />Countries: China\",\"Year: 2017<br />Total_Trade: 137114.9<br />Countries: China\",\"Year: 2018<br />Total_Trade: 135020.5<br />Countries: China\",\"Year: 2019<br />Total_Trade: 137312.4<br />Countries: China\",\"Year: 2020<br />Total_Trade: 136205.0<br />Countries: China\",\"Year: 2021<br />Total_Trade: 164252.2<br />Countries: China\",\"Year: 2022<br />Total_Trade: 175025.4<br />Countries: China\",\"Year: 2023<br />Total_Trade: 167035.4<br />Countries: China\",\"Year: 2024<br />Total_Trade: 170182.3<br />Countries: China\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":3.0236220472440949,\"color\":\"rgba(248,118,109,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"China\",\"legendgroup\":\"China\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024],\"y\":[30706.100000000002,36165.600000000006,42988,50015.700000000004,53266.5,54731.099999999999,49523.700000000004,60826.300000000003,60753.099999999999,61803.900000000001,62126.300000000003,62426.300000000003,61571.300000000003,64192.599999999999,69606.100000000006,70588.199999999997,65306.200000000004,68967.800000000003,85098.600000000006,83807.900000000009,70670.900000000009,78622.200000000012],\"text\":[\"Year: 2003<br />Total_Trade:  30706.1<br />Countries: Hong Kong\",\"Year: 2004<br />Total_Trade:  36165.6<br />Countries: Hong Kong\",\"Year: 2005<br />Total_Trade:  42988.0<br />Countries: Hong Kong\",\"Year: 2006<br />Total_Trade:  50015.7<br />Countries: Hong Kong\",\"Year: 2007<br />Total_Trade:  53266.5<br />Countries: Hong Kong\",\"Year: 2008<br />Total_Trade:  54731.1<br />Countries: Hong Kong\",\"Year: 2009<br />Total_Trade:  49523.7<br />Countries: Hong Kong\",\"Year: 2010<br />Total_Trade:  60826.3<br />Countries: Hong Kong\",\"Year: 2011<br />Total_Trade:  60753.1<br />Countries: Hong Kong\",\"Year: 2012<br />Total_Trade:  61803.9<br />Countries: Hong Kong\",\"Year: 2013<br />Total_Trade:  62126.3<br />Countries: Hong Kong\",\"Year: 2014<br />Total_Trade:  62426.3<br />Countries: Hong Kong\",\"Year: 2015<br />Total_Trade:  61571.3<br />Countries: Hong Kong\",\"Year: 2016<br />Total_Trade:  64192.6<br />Countries: Hong Kong\",\"Year: 2017<br />Total_Trade:  69606.1<br />Countries: Hong Kong\",\"Year: 2018<br />Total_Trade:  70588.2<br />Countries: Hong Kong\",\"Year: 2019<br />Total_Trade:  65306.2<br />Countries: Hong Kong\",\"Year: 2020<br />Total_Trade:  68967.8<br />Countries: Hong Kong\",\"Year: 2021<br />Total_Trade:  85098.6<br />Countries: Hong Kong\",\"Year: 2022<br />Total_Trade:  83807.9<br />Countries: Hong Kong\",\"Year: 2023<br />Total_Trade:  70670.9<br />Countries: Hong Kong\",\"Year: 2024<br />Total_Trade:  78622.2<br />Countries: Hong Kong\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":3.0236220472440949,\"color\":\"rgba(216,144,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Hong Kong\",\"legendgroup\":\"Hong Kong\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024],\"y\":[7929.3999999999996,11868.799999999999,16690.400000000001,20452.700000000001,25642.699999999997,29567.200000000001,21735.099999999999,30814.299999999999,35774.300000000003,30980.099999999999,25745.900000000001,25038.900000000001,23027.5,22011.299999999999,25235.599999999999,26445.799999999999,24293.700000000001,19794.699999999997,26830.400000000001,30825.599999999999,28818.900000000001,31893.900000000001],\"text\":[\"Year: 2003<br />Total_Trade:   7929.4<br />Countries: India\",\"Year: 2004<br />Total_Trade:  11868.8<br />Countries: India\",\"Year: 2005<br />Total_Trade:  16690.4<br />Countries: India\",\"Year: 2006<br />Total_Trade:  20452.7<br />Countries: India\",\"Year: 2007<br />Total_Trade:  25642.7<br />Countries: India\",\"Year: 2008<br />Total_Trade:  29567.2<br />Countries: India\",\"Year: 2009<br />Total_Trade:  21735.1<br />Countries: India\",\"Year: 2010<br />Total_Trade:  30814.3<br />Countries: India\",\"Year: 2011<br />Total_Trade:  35774.3<br />Countries: India\",\"Year: 2012<br />Total_Trade:  30980.1<br />Countries: India\",\"Year: 2013<br />Total_Trade:  25745.9<br />Countries: India\",\"Year: 2014<br />Total_Trade:  25038.9<br />Countries: India\",\"Year: 2015<br />Total_Trade:  23027.5<br />Countries: India\",\"Year: 2016<br />Total_Trade:  22011.3<br />Countries: India\",\"Year: 2017<br />Total_Trade:  25235.6<br />Countries: India\",\"Year: 2018<br />Total_Trade:  26445.8<br />Countries: India\",\"Year: 2019<br />Total_Trade:  24293.7<br />Countries: India\",\"Year: 2020<br />Total_Trade:  19794.7<br />Countries: India\",\"Year: 2021<br />Total_Trade:  26830.4<br />Countries: India\",\"Year: 2022<br />Total_Trade:  30825.6<br />Countries: India\",\"Year: 2023<br />Total_Trade:  28818.9<br />Countries: India\",\"Year: 2024<br />Total_Trade:  31893.9<br />Countries: India\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":3.0236220472440949,\"color\":\"rgba(163,165,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"India\",\"legendgroup\":\"India\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024],\"y\":[43995.899999999994,49469.800000000003,54968.600000000006,63825,67922.800000000003,77324.100000000006,59249.699999999997,68865.5,81555.899999999994,81865.900000000009,78924.600000000006,72857.600000000006,61561,56057.199999999997,59441.699999999997,65003.400000000001,58617.199999999997,48820.400000000001,59083.399999999994,76359.399999999994,68964.899999999994,74154.899999999994],\"text\":[\"Year: 2003<br />Total_Trade:  43995.9<br />Countries: Indonesia\",\"Year: 2004<br />Total_Trade:  49469.8<br />Countries: Indonesia\",\"Year: 2005<br />Total_Trade:  54968.6<br />Countries: Indonesia\",\"Year: 2006<br />Total_Trade:  63825.0<br />Countries: Indonesia\",\"Year: 2007<br />Total_Trade:  67922.8<br />Countries: Indonesia\",\"Year: 2008<br />Total_Trade:  77324.1<br />Countries: Indonesia\",\"Year: 2009<br />Total_Trade:  59249.7<br />Countries: Indonesia\",\"Year: 2010<br />Total_Trade:  68865.5<br />Countries: Indonesia\",\"Year: 2011<br />Total_Trade:  81555.9<br />Countries: Indonesia\",\"Year: 2012<br />Total_Trade:  81865.9<br />Countries: Indonesia\",\"Year: 2013<br />Total_Trade:  78924.6<br />Countries: Indonesia\",\"Year: 2014<br />Total_Trade:  72857.6<br />Countries: Indonesia\",\"Year: 2015<br />Total_Trade:  61561.0<br />Countries: Indonesia\",\"Year: 2016<br />Total_Trade:  56057.2<br />Countries: Indonesia\",\"Year: 2017<br />Total_Trade:  59441.7<br />Countries: Indonesia\",\"Year: 2018<br />Total_Trade:  65003.4<br />Countries: Indonesia\",\"Year: 2019<br />Total_Trade:  58617.2<br />Countries: Indonesia\",\"Year: 2020<br />Total_Trade:  48820.4<br />Countries: Indonesia\",\"Year: 2021<br />Total_Trade:  59083.4<br />Countries: Indonesia\",\"Year: 2022<br />Total_Trade:  76359.4<br />Countries: Indonesia\",\"Year: 2023<br />Total_Trade:  68964.9<br />Countries: Indonesia\",\"Year: 2024<br />Total_Trade:  74154.9<br />Countries: Indonesia\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":3.0236220472440949,\"color\":\"rgba(57,182,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Indonesia\",\"legendgroup\":\"Indonesia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024],\"y\":[43704.600000000006,51799.900000000001,52962.899999999994,55376.199999999997,54468.800000000003,60734,45197,55868,57062.800000000003,52559.5,47914.699999999997,46999.899999999994,47383.300000000003,49527.900000000001,51794.5,56883.5,50482.800000000003,49632.300000000003,53909.900000000001,65495.599999999999,54446.100000000006,53402.300000000003],\"text\":[\"Year: 2003<br />Total_Trade:  43704.6<br />Countries: Japan\",\"Year: 2004<br />Total_Trade:  51799.9<br />Countries: Japan\",\"Year: 2005<br />Total_Trade:  52962.9<br />Countries: Japan\",\"Year: 2006<br />Total_Trade:  55376.2<br />Countries: Japan\",\"Year: 2007<br />Total_Trade:  54468.8<br />Countries: Japan\",\"Year: 2008<br />Total_Trade:  60734.0<br />Countries: Japan\",\"Year: 2009<br />Total_Trade:  45197.0<br />Countries: Japan\",\"Year: 2010<br />Total_Trade:  55868.0<br />Countries: Japan\",\"Year: 2011<br />Total_Trade:  57062.8<br />Countries: Japan\",\"Year: 2012<br />Total_Trade:  52559.5<br />Countries: Japan\",\"Year: 2013<br />Total_Trade:  47914.7<br />Countries: Japan\",\"Year: 2014<br />Total_Trade:  46999.9<br />Countries: Japan\",\"Year: 2015<br />Total_Trade:  47383.3<br />Countries: Japan\",\"Year: 2016<br />Total_Trade:  49527.9<br />Countries: Japan\",\"Year: 2017<br />Total_Trade:  51794.5<br />Countries: Japan\",\"Year: 2018<br />Total_Trade:  56883.5<br />Countries: Japan\",\"Year: 2019<br />Total_Trade:  50482.8<br />Countries: Japan\",\"Year: 2020<br />Total_Trade:  49632.3<br />Countries: Japan\",\"Year: 2021<br />Total_Trade:  53909.9<br />Countries: Japan\",\"Year: 2022<br />Total_Trade:  65495.6<br />Countries: Japan\",\"Year: 2023<br />Total_Trade:  54446.1<br />Countries: Japan\",\"Year: 2024<br />Total_Trade:  53402.3<br />Countries: Japan\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":3.0236220472440949,\"color\":\"rgba(0,191,125,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Japan\",\"legendgroup\":\"Japan\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024],\"y\":[19241.799999999999,24384.400000000001,27821.900000000001,30968.399999999998,35359.599999999999,42888.699999999997,38653.5,44274.5,47122.900000000001,53120.5,50964.300000000003,48771.099999999999,45067.199999999997,43563.800000000003,45424.800000000003,40286.300000000003,39441.399999999994,44568.599999999999,56240.599999999999,70951.399999999994,62193.100000000006,66818.100000000006],\"text\":[\"Year: 2003<br />Total_Trade:  19241.8<br />Countries: Korea, Rep Of\",\"Year: 2004<br />Total_Trade:  24384.4<br />Countries: Korea, Rep Of\",\"Year: 2005<br />Total_Trade:  27821.9<br />Countries: Korea, Rep Of\",\"Year: 2006<br />Total_Trade:  30968.4<br />Countries: Korea, Rep Of\",\"Year: 2007<br />Total_Trade:  35359.6<br />Countries: Korea, Rep Of\",\"Year: 2008<br />Total_Trade:  42888.7<br />Countries: Korea, Rep Of\",\"Year: 2009<br />Total_Trade:  38653.5<br />Countries: Korea, Rep Of\",\"Year: 2010<br />Total_Trade:  44274.5<br />Countries: Korea, Rep Of\",\"Year: 2011<br />Total_Trade:  47122.9<br />Countries: Korea, Rep Of\",\"Year: 2012<br />Total_Trade:  53120.5<br />Countries: Korea, Rep Of\",\"Year: 2013<br />Total_Trade:  50964.3<br />Countries: Korea, Rep Of\",\"Year: 2014<br />Total_Trade:  48771.1<br />Countries: Korea, Rep Of\",\"Year: 2015<br />Total_Trade:  45067.2<br />Countries: Korea, Rep Of\",\"Year: 2016<br />Total_Trade:  43563.8<br />Countries: Korea, Rep Of\",\"Year: 2017<br />Total_Trade:  45424.8<br />Countries: Korea, Rep Of\",\"Year: 2018<br />Total_Trade:  40286.3<br />Countries: Korea, Rep Of\",\"Year: 2019<br />Total_Trade:  39441.4<br />Countries: Korea, Rep Of\",\"Year: 2020<br />Total_Trade:  44568.6<br />Countries: Korea, Rep Of\",\"Year: 2021<br />Total_Trade:  56240.6<br />Countries: Korea, Rep Of\",\"Year: 2022<br />Total_Trade:  70951.4<br />Countries: Korea, Rep Of\",\"Year: 2023<br />Total_Trade:  62193.1<br />Countries: Korea, Rep Of\",\"Year: 2024<br />Total_Trade:  66818.1<br />Countries: Korea, Rep Of\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":3.0236220472440949,\"color\":\"rgba(0,191,196,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Korea, Rep Of\",\"legendgroup\":\"Korea, Rep Of\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024],\"y\":[77770.299999999988,88528.100000000006,96446.600000000006,106489.70000000001,110388,111844.60000000001,86568.200000000012,107267.10000000001,113347.5,115031.3,116091.2,112931.5,98577.800000000003,93749.600000000006,108220.39999999999,118329.7,113015.7,103450.7,128683.70000000001,153016.90000000002,123640,138643.5],\"text\":[\"Year: 2003<br />Total_Trade:  77770.3<br />Countries: Malaysia\",\"Year: 2004<br />Total_Trade:  88528.1<br />Countries: Malaysia\",\"Year: 2005<br />Total_Trade:  96446.6<br />Countries: Malaysia\",\"Year: 2006<br />Total_Trade: 106489.7<br />Countries: Malaysia\",\"Year: 2007<br />Total_Trade: 110388.0<br />Countries: Malaysia\",\"Year: 2008<br />Total_Trade: 111844.6<br />Countries: Malaysia\",\"Year: 2009<br />Total_Trade:  86568.2<br />Countries: Malaysia\",\"Year: 2010<br />Total_Trade: 107267.1<br />Countries: Malaysia\",\"Year: 2011<br />Total_Trade: 113347.5<br />Countries: Malaysia\",\"Year: 2012<br />Total_Trade: 115031.3<br />Countries: Malaysia\",\"Year: 2013<br />Total_Trade: 116091.2<br />Countries: Malaysia\",\"Year: 2014<br />Total_Trade: 112931.5<br />Countries: Malaysia\",\"Year: 2015<br />Total_Trade:  98577.8<br />Countries: Malaysia\",\"Year: 2016<br />Total_Trade:  93749.6<br />Countries: Malaysia\",\"Year: 2017<br />Total_Trade: 108220.4<br />Countries: Malaysia\",\"Year: 2018<br />Total_Trade: 118329.7<br />Countries: Malaysia\",\"Year: 2019<br />Total_Trade: 113015.7<br />Countries: Malaysia\",\"Year: 2020<br />Total_Trade: 103450.7<br />Countries: Malaysia\",\"Year: 2021<br />Total_Trade: 128683.7<br />Countries: Malaysia\",\"Year: 2022<br />Total_Trade: 153016.9<br />Countries: Malaysia\",\"Year: 2023<br />Total_Trade: 123640.0<br />Countries: Malaysia\",\"Year: 2024<br />Total_Trade: 138643.5<br />Countries: Malaysia\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":3.0236220472440949,\"color\":\"rgba(0,176,246,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Malaysia\",\"legendgroup\":\"Malaysia\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024],\"y\":[23274.800000000003,29901.799999999999,34657.699999999997,39280.300000000003,37101.199999999997,36606.099999999999,31177.400000000001,42697.400000000001,45700.400000000001,49677.400000000001,55500.099999999999,58528.699999999997,53909.699999999997,52533.800000000003,60358,65301.200000000004,66526.800000000003,75201.899999999994,99912.300000000003,114144.3,92901.5,116787.89999999999],\"text\":[\"Year: 2003<br />Total_Trade:  23274.8<br />Countries: Taiwan\",\"Year: 2004<br />Total_Trade:  29901.8<br />Countries: Taiwan\",\"Year: 2005<br />Total_Trade:  34657.7<br />Countries: Taiwan\",\"Year: 2006<br />Total_Trade:  39280.3<br />Countries: Taiwan\",\"Year: 2007<br />Total_Trade:  37101.2<br />Countries: Taiwan\",\"Year: 2008<br />Total_Trade:  36606.1<br />Countries: Taiwan\",\"Year: 2009<br />Total_Trade:  31177.4<br />Countries: Taiwan\",\"Year: 2010<br />Total_Trade:  42697.4<br />Countries: Taiwan\",\"Year: 2011<br />Total_Trade:  45700.4<br />Countries: Taiwan\",\"Year: 2012<br />Total_Trade:  49677.4<br />Countries: Taiwan\",\"Year: 2013<br />Total_Trade:  55500.1<br />Countries: Taiwan\",\"Year: 2014<br />Total_Trade:  58528.7<br />Countries: Taiwan\",\"Year: 2015<br />Total_Trade:  53909.7<br />Countries: Taiwan\",\"Year: 2016<br />Total_Trade:  52533.8<br />Countries: Taiwan\",\"Year: 2017<br />Total_Trade:  60358.0<br />Countries: Taiwan\",\"Year: 2018<br />Total_Trade:  65301.2<br />Countries: Taiwan\",\"Year: 2019<br />Total_Trade:  66526.8<br />Countries: Taiwan\",\"Year: 2020<br />Total_Trade:  75201.9<br />Countries: Taiwan\",\"Year: 2021<br />Total_Trade:  99912.3<br />Countries: Taiwan\",\"Year: 2022<br />Total_Trade: 114144.3<br />Countries: Taiwan\",\"Year: 2023<br />Total_Trade:  92901.5<br />Countries: Taiwan\",\"Year: 2024<br />Total_Trade: 116787.9<br />Countries: Taiwan\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":3.0236220472440949,\"color\":\"rgba(149,144,255,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Taiwan\",\"legendgroup\":\"Taiwan\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024],\"y\":[20333.400000000001,24446.700000000001,28314.099999999999,32174.699999999997,31733.799999999999,35195.900000000001,26588.800000000003,31289,32072.300000000003,32679.599999999999,30873.400000000001,30774.599999999999,30381.299999999999,28973,30164.599999999999,32186.799999999999,31391.799999999999,32958.399999999994,34133.399999999994,42122.5,41786.900000000001,44475],\"text\":[\"Year: 2003<br />Total_Trade:  20333.4<br />Countries: Thailand\",\"Year: 2004<br />Total_Trade:  24446.7<br />Countries: Thailand\",\"Year: 2005<br />Total_Trade:  28314.1<br />Countries: Thailand\",\"Year: 2006<br />Total_Trade:  32174.7<br />Countries: Thailand\",\"Year: 2007<br />Total_Trade:  31733.8<br />Countries: Thailand\",\"Year: 2008<br />Total_Trade:  35195.9<br />Countries: Thailand\",\"Year: 2009<br />Total_Trade:  26588.8<br />Countries: Thailand\",\"Year: 2010<br />Total_Trade:  31289.0<br />Countries: Thailand\",\"Year: 2011<br />Total_Trade:  32072.3<br />Countries: Thailand\",\"Year: 2012<br />Total_Trade:  32679.6<br />Countries: Thailand\",\"Year: 2013<br />Total_Trade:  30873.4<br />Countries: Thailand\",\"Year: 2014<br />Total_Trade:  30774.6<br />Countries: Thailand\",\"Year: 2015<br />Total_Trade:  30381.3<br />Countries: Thailand\",\"Year: 2016<br />Total_Trade:  28973.0<br />Countries: Thailand\",\"Year: 2017<br />Total_Trade:  30164.6<br />Countries: Thailand\",\"Year: 2018<br />Total_Trade:  32186.8<br />Countries: Thailand\",\"Year: 2019<br />Total_Trade:  31391.8<br />Countries: Thailand\",\"Year: 2020<br />Total_Trade:  32958.4<br />Countries: Thailand\",\"Year: 2021<br />Total_Trade:  34133.4<br />Countries: Thailand\",\"Year: 2022<br />Total_Trade:  42122.5<br />Countries: Thailand\",\"Year: 2023<br />Total_Trade:  41786.9<br />Countries: Thailand\",\"Year: 2024<br />Total_Trade:  44475.0<br />Countries: Thailand\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":3.0236220472440949,\"color\":\"rgba(231,107,243,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Thailand\",\"legendgroup\":\"Thailand\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024],\"y\":[64520.300000000003,72118.399999999994,77895.5,90303.100000000006,88149.399999999994,86335.899999999994,66921.899999999994,78391,75869.399999999994,75339.899999999994,76988,75762.399999999994,75733.100000000006,72414.199999999997,79917.800000000003,97909.200000000012,105024.29999999999,102428.5,105733.5,132745.70000000001,129062.60000000001,131989.29999999999],\"text\":[\"Year: 2003<br />Total_Trade:  64520.3<br />Countries: United States\",\"Year: 2004<br />Total_Trade:  72118.4<br />Countries: United States\",\"Year: 2005<br />Total_Trade:  77895.5<br />Countries: United States\",\"Year: 2006<br />Total_Trade:  90303.1<br />Countries: United States\",\"Year: 2007<br />Total_Trade:  88149.4<br />Countries: United States\",\"Year: 2008<br />Total_Trade:  86335.9<br />Countries: United States\",\"Year: 2009<br />Total_Trade:  66921.9<br />Countries: United States\",\"Year: 2010<br />Total_Trade:  78391.0<br />Countries: United States\",\"Year: 2011<br />Total_Trade:  75869.4<br />Countries: United States\",\"Year: 2012<br />Total_Trade:  75339.9<br />Countries: United States\",\"Year: 2013<br />Total_Trade:  76988.0<br />Countries: United States\",\"Year: 2014<br />Total_Trade:  75762.4<br />Countries: United States\",\"Year: 2015<br />Total_Trade:  75733.1<br />Countries: United States\",\"Year: 2016<br />Total_Trade:  72414.2<br />Countries: United States\",\"Year: 2017<br />Total_Trade:  79917.8<br />Countries: United States\",\"Year: 2018<br />Total_Trade:  97909.2<br />Countries: United States\",\"Year: 2019<br />Total_Trade: 105024.3<br />Countries: United States\",\"Year: 2020<br />Total_Trade: 102428.5<br />Countries: United States\",\"Year: 2021<br />Total_Trade: 105733.5<br />Countries: United States\",\"Year: 2022<br />Total_Trade: 132745.7<br />Countries: United States\",\"Year: 2023<br />Total_Trade: 129062.6<br />Countries: United States\",\"Year: 2024<br />Total_Trade: 131989.3<br />Countries: United States\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":3.0236220472440949,\"color\":\"rgba(255,98,188,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"United States\",\"legendgroup\":\"United States\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":66.484018264840202},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Top 10 Countries by Total Market Trade Over the Years\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[2001.95,2025.05],\"tickmode\":\"array\",\"ticktext\":[\"2005\",\"2010\",\"2015\",\"2020\",\"2025\"],\"tickvals\":[2005,2010,2015,2020,2025],\"categoryorder\":\"array\",\"categoryarray\":[\"2005\",\"2010\",\"2015\",\"2020\",\"2025\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Year\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-425.40000000000146,183380.20000000001],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"50,000\",\"100,000\",\"150,000\"],\"tickvals\":[5.6843418860808015e-14,50000,100000,150000],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"50,000\",\"100,000\",\"150,000\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Total Trade (SGD)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"Country\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"503819d2402e\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"}},\"cur_data\":\"503819d2402e\",\"visdat\":{\"503819d2402e\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n## 5.3 Top 10 Countries by total Merchandise Exports (2015-2024)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\n\nTotal_exports_ts <- total_exports %>%\n  pivot_longer(cols = -Countries,\n               names_to = \"Year\",\n               values_to = \"Value\") %>%\n  arrange(Countries, Year)\n\nTotal_exports_ts <- Total_exports_ts %>%\n  filter(!Countries %in% excluded_regions, Year >= 2015 & Year <= 2024)\n\ntop_10_exports <- Total_exports_ts %>%\n  group_by(Countries) %>%\n  summarise(Total_Exports_Sum = sum(Value, na.rm = TRUE)) %>%\n  top_n(10, Total_Exports_Sum) %>%\n  pull(Countries)\n\nTotal_Exports_Top10 <- Total_exports_ts %>%\n  filter(Countries %in% top_10_exports)\n\nggplot(data = Total_Exports_Top10,\n       aes(x = Year, y = Value, group = Countries, color = Countries)) +\n  geom_line(size = 0.5) +\n  facet_wrap(~ Countries, ncol = 3, scales = \"free_y\") +\n  theme_bw() +\n  labs(title = \"Top 10 Countries by Total Merchandise Exports (2015-2024)\",\n       x = \"Year\", y = \"Export Value\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex2_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n\n## 5.4 Top 10 Countries by total Merchandise Imports (2015-2024)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nImports_ts <- imports_clean %>%\n  pivot_longer(cols = -Countries,\n               names_to = \"Year\",\n               values_to = \"Value\") %>%\n  arrange(Countries, Year)\n\nImports_ts <- Imports_ts %>%\n  filter(!Countries %in% excluded_regions, Year >= 2015 & Year <= 2024)\n\ntop_10_imports <- Imports_ts %>%\n  group_by(Countries) %>%\n  summarise(Total_Imports_Sum = sum(Value, na.rm = TRUE)) %>%\n  top_n(10, Total_Imports_Sum) %>%\n  pull(Countries)\n\nImports_Top10 <- Imports_ts %>%\n  filter(Countries %in% top_10_imports)\n\nggplot(data = Imports_Top10,\n       aes(x = Year, y = Value, group = Countries, color = Countries)) +\n  geom_line(size = 0.5) +\n  facet_wrap(~ Countries, ncol = 3, scales = \"free_y\") +\n  theme_bw() +\n  labs(title = \"Top 10 Countries by Total Merchandise Imports (2015-2024)\",\n       x = \"Year\", y = \"Import Value\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex2_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n\n## 5.5 Top 10 Countries by Total Merchandise Trade (2003 - 2025)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = Total_Trade_Top10,\n       aes(x = Year, y = Total_Trade, group = Countries, color = Countries))+\n  geom_line(size = 0.5) +\n  facet_wrap(~ Countries,\n             ncol = 3,\n             scales = \"free_y\") +\n  labs(title = \"Top 10 Countries by Total Merchandise Trade (2003 Jan - 2025 Jan) \")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex2_files/figure-html/unnamed-chunk-29-1.png){width=960}\n:::\n\n```{.r .cell-code}\n  theme_bw()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 136\n $ line                            :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : num 0.5\n  ..$ linetype     : num 1\n  ..$ lineend      : chr \"butt\"\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                            :List of 5\n  ..$ fill         : chr \"white\"\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : num 0.5\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                            :List of 11\n  ..$ family       : chr \"\"\n  ..$ face         : chr \"plain\"\n  ..$ colour       : chr \"black\"\n  ..$ size         : num 11\n  ..$ hjust        : num 0.5\n  ..$ vjust        : num 0.5\n  ..$ angle        : num 0\n  ..$ lineheight   : num 0.9\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ title                           : NULL\n $ aspect.ratio                    : NULL\n $ axis.title                      : NULL\n $ axis.title.x                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 2.75points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x.top                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 2.75points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x.bottom             : NULL\n $ axis.title.y                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 2.75points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y.left               : NULL\n $ axis.title.y.right              :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 2.75points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text                       :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"grey30\"\n  ..$ size         : 'rel' num 0.8\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 2.2points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top                 :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 2.2points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.bottom              : NULL\n $ axis.text.y                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 1\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 2.2points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y.left                : NULL\n $ axis.text.y.right               :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 2.2points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.theta                 : NULL\n $ axis.text.r                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0.5\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 2.2points 0points 2.2points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks                      :List of 6\n  ..$ colour       : chr \"grey20\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.x                    : NULL\n $ axis.ticks.x.top                : NULL\n $ axis.ticks.x.bottom             : NULL\n $ axis.ticks.y                    : NULL\n $ axis.ticks.y.left               : NULL\n $ axis.ticks.y.right              : NULL\n $ axis.ticks.theta                : NULL\n $ axis.ticks.r                    : NULL\n $ axis.minor.ticks.x.top          : NULL\n $ axis.minor.ticks.x.bottom       : NULL\n $ axis.minor.ticks.y.left         : NULL\n $ axis.minor.ticks.y.right        : NULL\n $ axis.minor.ticks.theta          : NULL\n $ axis.minor.ticks.r              : NULL\n $ axis.ticks.length               : 'simpleUnit' num 2.75points\n  ..- attr(*, \"unit\")= int 8\n $ axis.ticks.length.x             : NULL\n $ axis.ticks.length.x.top         : NULL\n $ axis.ticks.length.x.bottom      : NULL\n $ axis.ticks.length.y             : NULL\n $ axis.ticks.length.y.left        : NULL\n $ axis.ticks.length.y.right       : NULL\n $ axis.ticks.length.theta         : NULL\n $ axis.ticks.length.r             : NULL\n $ axis.minor.ticks.length         : 'rel' num 0.75\n $ axis.minor.ticks.length.x       : NULL\n $ axis.minor.ticks.length.x.top   : NULL\n $ axis.minor.ticks.length.x.bottom: NULL\n $ axis.minor.ticks.length.y       : NULL\n $ axis.minor.ticks.length.y.left  : NULL\n $ axis.minor.ticks.length.y.right : NULL\n $ axis.minor.ticks.length.theta   : NULL\n $ axis.minor.ticks.length.r       : NULL\n $ axis.line                       : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.line.x                     : NULL\n $ axis.line.x.top                 : NULL\n $ axis.line.x.bottom              : NULL\n $ axis.line.y                     : NULL\n $ axis.line.y.left                : NULL\n $ axis.line.y.right               : NULL\n $ axis.line.theta                 : NULL\n $ axis.line.r                     : NULL\n $ legend.background               :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.margin                   : 'margin' num [1:4] 5.5points 5.5points 5.5points 5.5points\n  ..- attr(*, \"unit\")= int 8\n $ legend.spacing                  : 'simpleUnit' num 11points\n  ..- attr(*, \"unit\")= int 8\n $ legend.spacing.x                : NULL\n $ legend.spacing.y                : NULL\n $ legend.key                      : NULL\n $ legend.key.size                 : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height               : NULL\n $ legend.key.width                : NULL\n $ legend.key.spacing              : 'simpleUnit' num 5.5points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key.spacing.x            : NULL\n $ legend.key.spacing.y            : NULL\n $ legend.frame                    : NULL\n $ legend.ticks                    : NULL\n $ legend.ticks.length             : 'rel' num 0.2\n $ legend.axis.line                : NULL\n $ legend.text                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 0.8\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.position            : NULL\n $ legend.title                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.position           : NULL\n $ legend.position                 : chr \"right\"\n $ legend.position.inside          : NULL\n $ legend.direction                : NULL\n $ legend.byrow                    : NULL\n $ legend.justification            : chr \"center\"\n $ legend.justification.top        : NULL\n $ legend.justification.bottom     : NULL\n $ legend.justification.left       : NULL\n $ legend.justification.right      : NULL\n $ legend.justification.inside     : NULL\n $ legend.location                 : NULL\n $ legend.box                      : NULL\n $ legend.box.just                 : NULL\n $ legend.box.margin               : 'margin' num [1:4] 0cm 0cm 0cm 0cm\n  ..- attr(*, \"unit\")= int 1\n $ legend.box.background           : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.box.spacing              : 'simpleUnit' num 11points\n  ..- attr(*, \"unit\")= int 8\n  [list output truncated]\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n```\n\n\n:::\n:::\n",
    "supporting": [
      "Take-home_Ex2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}