{
  "hash": "f2fb8322811b2ca3ef46c74c335ecc4f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home_Ex3\"\nauthor: \"Enrico Limberg\"\ndate: \"March 20, 2025\"\ndate-modified: \"last-modified\"\nexecute:\n    echo: true\n    eval: true\n    warning: false\n    freeze: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(fable)\nlibrary(tsibble)\nlibrary(ggplot2)\n\n# Load and preprocess data\nweather_data <- read.csv(\"data/weather.csv\") %>%\n  mutate(date = as.Date(paste(year, month, day, sep = \"-\"))) %>%\n  mutate(across(where(is.numeric), ~ifelse(is.na(.), mean(., na.rm = TRUE), .)))\n\n# Convert to tsibble (time-series format)\nweather_ts <- weather_data %>%\n  as_tsibble(index = date, key = station)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Print first few rows\nhead(weather_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     station year month day daily_rainfall_total_mm highest_30_min_rainfall_mm\n1 Paya Lebar 2024     1   1                    21.6                        9.2\n2 Paya Lebar 2024     1   2                     0.0                        0.0\n3 Paya Lebar 2024     1   3                     1.6                        1.6\n4 Paya Lebar 2024     1   4                    63.8                       13.8\n5 Paya Lebar 2024     1   5                     4.4                        1.6\n6 Paya Lebar 2024     1   6                     3.0                        3.0\n  highest_60_min_rainfall_mm highest_120_min_rainfall_mm mean_temperature_c\n1                       13.2                        14.6               25.9\n2                        0.0                         0.0               27.8\n3                        1.6                         1.6               27.7\n4                       19.8                        26.6               25.0\n5                        3.0                         3.2               26.8\n6                        3.0                         3.0               28.1\n  maximum_temperature_c minimum_temperature_c mean_wind_speed_km_h\n1                  28.8                  24.5                  6.5\n2                  32.6                  24.2                  7.0\n3                  32.6                  25.5                  7.1\n4                  26.9                  23.7                  7.2\n5                  30.8                  24.5                  8.4\n6                  33.1                  24.9                  7.6\n  max_wind_speed_km_h       date\n1                24.1 2024-01-01\n2                31.5 2024-01-02\n3                29.6 2024-01-03\n4                25.9 2024-01-04\n5                35.2 2024-01-05\n6                27.8 2024-01-06\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define a station to analyze\nselected_station <- \"Changi\"\n\n# Define a variable to forecast\nselected_var <- \"mean_temperature_c\"\n\n# Filter last 3 months\nfiltered_data <- weather_ts %>%\n  filter(station == selected_station & date >= max(date) - months(3))\n\n# Plot the past 3 months of data\nggplot(filtered_data, aes(x = date, y = .data[[selected_var]])) +\n  geom_line(color = \"blue\") +\n  labs(title = paste(\"Last 3 Months of\", selected_var, \"at\", selected_station),\n       x = \"Date\", y = selected_var) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex3_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ensure there are enough data points\nnrow(filtered_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check for NA values\nsum(is.na(filtered_data[[selected_var]]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\nfiltered_data <- filtered_data %>%\n  mutate(across(where(is.numeric), ~ifelse(is.na(.), mean(., na.rm = TRUE), .)))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(filtered_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntbl_ts [0 × 14] (S3: tbl_ts/tbl_df/tbl/data.frame)\n $ station                    : chr(0) \n $ year                       : logi(0) \n $ month                      : logi(0) \n $ day                        : logi(0) \n $ daily_rainfall_total_mm    : logi(0) \n $ highest_30_min_rainfall_mm : logi(0) \n $ highest_60_min_rainfall_mm : logi(0) \n $ highest_120_min_rainfall_mm: logi(0) \n $ mean_temperature_c         : logi(0) \n $ maximum_temperature_c      : logi(0) \n $ minimum_temperature_c      : logi(0) \n $ mean_wind_speed_km_h       : logi(0) \n $ max_wind_speed_km_h        : logi(0) \n $ date                       : 'Date' num(0) \n - attr(*, \"key\")= tibble [0 × 2] (S3: tbl_df/tbl/data.frame)\n  ..$ station: chr(0) \n  ..$ .rows  : list<int> [1:0] \n list()\n  .. ..@ ptype: int(0) \n  ..- attr(*, \".drop\")= logi TRUE\n - attr(*, \"index\")= chr \"date\"\n  ..- attr(*, \"ordered\")= logi TRUE\n - attr(*, \"index2\")= chr \"date\"\n - attr(*, \"interval\")= interval [1:1] ?\n  ..@ .regular: logi TRUE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_data <- filtered_data %>%\n  mutate(!!selected_var := as.numeric(.data[[selected_var]]))\n```\n:::\n",
    "supporting": [
      "Take-home_Ex3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}